recorddef(record) ::= <<
record <record.name>
    <record.annotations.keys: {k| @<k> <record.annotations.(k)>}; separator="\n"> 
  extends 
    <record.supername; separator=", "> 
{
  <record.members: memberdef(); separator=";\n">
  <if(record.members)>;<endif>
}
  <record.globals: globaldef() ; separator="\n">
  
  <record.procedures: methoddef(); separator="\n"><\n><\n>
>>

memberdef(it) ::= <<
  <it.type> <it.name> <it.annotations.keys: {k| @<k> <it.annotations.(k)>}; separator=" ">
>>

globaldef(it) ::= <<
  global <it.type> @@<it.name> <it.annotations.keys: {k| @<k> <it.annotations.(k)>}; separator=" ">
>>

methoddef(it) ::= <<
  procedure <it.returnType> <it.name> (<it.parameters; separator=", ">) <it.annotations.keys: {k| @<k> <it.annotations.(k)>}; separator=" "> {
    <it.code; separator="\n">
  }
>>

innerclassdef(name, outerName, innerName, access) ::= <<(
  @Name <name><if(outerName)>, 
  @OuterName <outerName><endif><if(innerName)>, 
  @InnerName <innerName><endif><if(access)>, 
  @AccessFlag (<access>)<endif><\n> )
>>

outerclassdef(owner, method) ::= <<
  <owner><if(method)>, {|<method>|}<endif>
>>
 