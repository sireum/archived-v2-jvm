record (|InputStreamReader|)
    @source "InputStreamReader.java"
    @type class
    @AccessFlag (PUBLIC) 
  extends 
    (|java.io.Reader|) 
{
  (|sun.nio.cs.StreamDecoder|) <|InputStreamReader.sd|> @AccessFlag (PRIVATE,FINAL);
}

  procedure (|void|) {|InputStreamReader.<init>|} ((|InputStreamReader|) [|v0|], (|java.io.InputStream|) [|v1|]) 
    @MaxLocals 3
    @MaxStack 4
    @Owner (|InputStreamReader|)
    @Access (PUBLIC,CONSTRUCTOR)
    @Signature "InputStreamReader.<init>:(Ljava/io/InputStream;)V" 
  {
    local temp;
    s0;
    s1;


    #L00003a. <@Frame (@New, 2, `[:this, (|java.lang.Object|), :top], 0, `[:top, :top, :top, :top])>
    #L00003b. call s0:= {|java.io.Reader.<init>|}([|v0|],[|v1|]) @signature "java/io/Reader.<init>:(Ljava/lang/Object;)V" @classDescriptor [|java.io.Reader|] @type special;
    #L00000a. checkcast null @type (|java.lang.String|);
    #L00000b. call s0:= {|sun.nio.cs.StreamDecoder.forInputStreamReader|}([|v1|],[|v0|],null) @signature "sun/nio/cs/StreamDecoder.forInputStreamReader:(Ljava/io/InputStream;Ljava/lang/Object;Ljava/lang/String;)Lsun/nio/cs/StreamDecoder;" @classDescriptor [|sun.nio.cs.StreamDecoder|] @type direct;
    #L00000c. [|v0|].<|java.io.InputStreamReader.sd|>:= s0;
    #L00001a. goto L00004;
    #L00002a. <@Frame (@New, 2, `[(|java.lang.Object|), (|java.lang.Object|), :top], 1, `[(|java.lang.Object|), :top, :top, :top])>
    #L00002b. [|v2|]:= "Exception" @type object;
    #L00005a. s0:= new (|java.lang.Error|);
    #L00005b. call s1:= {|java.lang.Error.<init>|}(s0,[|v2|]) @signature "java/lang/Error.<init>:(Ljava/lang/Throwable;)V" @classDescriptor [|java.lang.Error|] @type special;
    #L00005c. throw s0;
    #L00004a. <@Frame (@New, 2, `[(|java.lang.Object|), (|java.lang.Object|), :top], 0, `[(|java.lang.Object|), :top, :top, :top])>
    #L00004b. return @void;
      catch (|java.io.UnsupportedEncodingException|) @[L00000..L00001] goto L00002;
  }
  procedure (|void|) {|InputStreamReader.<init>|} ((|InputStreamReader|) [|v0|], (|java.io.InputStream|) [|v1|], (|java.lang.String|) [|v2|]) 
    @Throws [|java.io.UnsupportedEncodingException|]
    @MaxLocals 3
    @MaxStack 4
    @Owner (|InputStreamReader|)
    @Access (PUBLIC,CONSTRUCTOR)
    @Signature "InputStreamReader.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V" 
  {
    local temp;
    s0;
    s1;


    #L00000a. <@Frame (@New, 3, `[:this, (|java.lang.Object|), (|java.lang.Object|)], 0, `[:top, :top, :top, :top])>
    #L00000b. call s0:= {|java.io.Reader.<init>|}([|v0|],[|v1|]) @signature "java/io/Reader.<init>:(Ljava/lang/Object;)V" @classDescriptor [|java.io.Reader|] @type special;
    #L00001a. if [|v2|] != null then goto L00002a;
    #L00003a. s0:= new (|java.lang.NullPointerException|);
    #L00003b. call s1:= {|java.lang.NullPointerException.<init>|}(s0,"charsetName") @signature "java/lang/NullPointerException.<init>:(Ljava/lang/String;)V" @classDescriptor [|java.lang.NullPointerException|] @type special;
    #L00003c. throw s0;
    #L00002a. <@Frame (@New, 3, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[:top, :top, :top, :top])>
    #L00002b. call s0:= {|sun.nio.cs.StreamDecoder.forInputStreamReader|}([|v1|],[|v0|],[|v2|]) @signature "sun/nio/cs/StreamDecoder.forInputStreamReader:(Ljava/io/InputStream;Ljava/lang/Object;Ljava/lang/String;)Lsun/nio/cs/StreamDecoder;" @classDescriptor [|sun.nio.cs.StreamDecoder|] @type direct;
    #L00002c. [|v0|].<|java.io.InputStreamReader.sd|>:= s0;
    #L00004a. return @void;
  }
  procedure (|void|) {|InputStreamReader.<init>|} ((|InputStreamReader|) [|v0|], (|java.io.InputStream|) [|v1|], (|java.nio.charset.Charset|) [|v2|]) 
    @MaxLocals 3
    @MaxStack 4
    @Owner (|InputStreamReader|)
    @Access (PUBLIC,CONSTRUCTOR)
    @Signature "InputStreamReader.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V" 
  {
    local temp;
    s0;
    s1;


    #L00000a. <@Frame (@New, 3, `[:this, (|java.lang.Object|), (|java.lang.Object|)], 0, `[:top, :top, :top, :top])>
    #L00000b. call s0:= {|java.io.Reader.<init>|}([|v0|],[|v1|]) @signature "java/io/Reader.<init>:(Ljava/lang/Object;)V" @classDescriptor [|java.io.Reader|] @type special;
    #L00001a. if [|v2|] != null then goto L00002a;
    #L00003a. s0:= new (|java.lang.NullPointerException|);
    #L00003b. call s1:= {|java.lang.NullPointerException.<init>|}(s0,"charset") @signature "java/lang/NullPointerException.<init>:(Ljava/lang/String;)V" @classDescriptor [|java.lang.NullPointerException|] @type special;
    #L00003c. throw s0;
    #L00002a. <@Frame (@New, 3, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[:top, :top, :top, :top])>
    #L00002b. call s0:= {|sun.nio.cs.StreamDecoder.forInputStreamReader|}([|v1|],[|v0|],[|v2|]) @signature "sun/nio/cs/StreamDecoder.forInputStreamReader:(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)Lsun/nio/cs/StreamDecoder;" @classDescriptor [|sun.nio.cs.StreamDecoder|] @type direct;
    #L00002c. [|v0|].<|java.io.InputStreamReader.sd|>:= s0;
    #L00004a. return @void;
  }
  procedure (|void|) {|InputStreamReader.<init>|} ((|InputStreamReader|) [|v0|], (|java.io.InputStream|) [|v1|], (|java.nio.charset.CharsetDecoder|) [|v2|]) 
    @MaxLocals 3
    @MaxStack 4
    @Owner (|InputStreamReader|)
    @Access (PUBLIC,CONSTRUCTOR)
    @Signature "InputStreamReader.<init>:(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)V" 
  {
    local temp;
    s0;
    s1;


    #L00000a. <@Frame (@New, 3, `[:this, (|java.lang.Object|), (|java.lang.Object|)], 0, `[:top, :top, :top, :top])>
    #L00000b. call s0:= {|java.io.Reader.<init>|}([|v0|],[|v1|]) @signature "java/io/Reader.<init>:(Ljava/lang/Object;)V" @classDescriptor [|java.io.Reader|] @type special;
    #L00001a. if [|v2|] != null then goto L00002a;
    #L00003a. s0:= new (|java.lang.NullPointerException|);
    #L00003b. call s1:= {|java.lang.NullPointerException.<init>|}(s0,"charset decoder") @signature "java/lang/NullPointerException.<init>:(Ljava/lang/String;)V" @classDescriptor [|java.lang.NullPointerException|] @type special;
    #L00003c. throw s0;
    #L00002a. <@Frame (@New, 3, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[:top, :top, :top, :top])>
    #L00002b. call s0:= {|sun.nio.cs.StreamDecoder.forInputStreamReader|}([|v1|],[|v0|],[|v2|]) @signature "sun/nio/cs/StreamDecoder.forInputStreamReader:(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/CharsetDecoder;)Lsun/nio/cs/StreamDecoder;" @classDescriptor [|sun.nio.cs.StreamDecoder|] @type direct;
    #L00002c. [|v0|].<|java.io.InputStreamReader.sd|>:= s0;
    #L00004a. return @void;
  }
  procedure (|java.lang.String|) {|InputStreamReader.getEncoding|} ((|InputStreamReader|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 1
    @Owner (|InputStreamReader|)
    @Access (PUBLIC)
    @Signature "InputStreamReader.getEncoding:()Ljava/lang/String;" 
  {
    local temp;
    s0;
    s1;


    #L00000a. s0:= [|v0|].<|java.io.InputStreamReader.sd|>;
    #L00000b. call s1:= {|sun.nio.cs.StreamDecoder.getEncoding|}(s0) @signature "sun/nio/cs/StreamDecoder.getEncoding:()Ljava/lang/String;" @classDescriptor [|sun.nio.cs.StreamDecoder|] @type virtual;
    #L00000c. return s1;
  }
  procedure (|int|) {|InputStreamReader.read|} ((|InputStreamReader|) [|v0|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 1
    @MaxStack 1
    @Owner (|InputStreamReader|)
    @Access (PUBLIC)
    @Signature "InputStreamReader.read:()I" 
  {
    local temp;
    s0;
    s1;


    #L00000a. s0:= [|v0|].<|java.io.InputStreamReader.sd|>;
    #L00000b. call s1:= {|sun.nio.cs.StreamDecoder.read|}(s0) @signature "sun/nio/cs/StreamDecoder.read:()I" @classDescriptor [|sun.nio.cs.StreamDecoder|] @type virtual;
    #L00000c. return s1;
  }
  procedure (|int|) {|InputStreamReader.read|} ((|InputStreamReader|) [|v0|], (|char|) [|v1|], (|int|) [|v2|], (|int|) [|v3|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 4
    @MaxStack 4
    @Owner (|InputStreamReader|)
    @Access (PUBLIC)
    @Signature "InputStreamReader.read:([CII)I" 
  {
    local temp;
    s0;
    s1;


    #L00000a. s0:= [|v0|].<|java.io.InputStreamReader.sd|>;
    #L00000b. call s1:= {|sun.nio.cs.StreamDecoder.read|}(s0,[|v1|],[|v2|],[|v3|]) @signature "sun/nio/cs/StreamDecoder.read:([CII)I" @classDescriptor [|sun.nio.cs.StreamDecoder|] @type virtual;
    #L00000c. return s1;
  }
  procedure (|boolean|) {|InputStreamReader.ready|} ((|InputStreamReader|) [|v0|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 1
    @MaxStack 1
    @Owner (|InputStreamReader|)
    @Access (PUBLIC)
    @Signature "InputStreamReader.ready:()Z" 
  {
    local temp;
    s0;
    s1;


    #L00000a. s0:= [|v0|].<|java.io.InputStreamReader.sd|>;
    #L00000b. call s1:= {|sun.nio.cs.StreamDecoder.ready|}(s0) @signature "sun/nio/cs/StreamDecoder.ready:()Z" @classDescriptor [|sun.nio.cs.StreamDecoder|] @type virtual;
    #L00000c. return s1;
  }
  procedure (|void|) {|InputStreamReader.close|} ((|InputStreamReader|) [|v0|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 1
    @MaxStack 1
    @Owner (|InputStreamReader|)
    @Access (PUBLIC)
    @Signature "InputStreamReader.close:()V" 
  {
    local temp;
    s0;
    s1;


    #L00000a. s0:= [|v0|].<|java.io.InputStreamReader.sd|>;
    #L00000b. call s1:= {|sun.nio.cs.StreamDecoder.close|}(s0) @signature "sun/nio/cs/StreamDecoder.close:()V" @classDescriptor [|sun.nio.cs.StreamDecoder|] @type virtual;
    #L00001a. return @void;
  }


