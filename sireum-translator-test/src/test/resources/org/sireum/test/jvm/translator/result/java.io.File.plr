record (|java.io.File|)
    @Source "File.java"
    @GenericSignature "Ljava/lang/Object;Ljava/io/Serializable;Ljava/lang/Comparable<Ljava/io/File;>;"
    @Type class
    @AccessFlag (PUBLIC)
    @InnerClass (
      @Name (|java.io.ObjectInputStream$GetField|), 
      @OuterName (|java.io.ObjectInputStream|), 
      @InnerName GetField, 
      @AccessFlag (PUBLIC,STATIC)
     ) 
  extends 
    (|java.lang.Object|) 
{
  (|java.io.FileSystem|) <|File.fs|> @AccessFlag (PRIVATE,STATIC);
  (|java.lang.String|) <|File.path|> @AccessFlag (PRIVATE);
  (|java.io.File$PathStatus|) <|File.status|> @AccessFlag (PRIVATE,TRANSIENT,VARARGS);
  (|int|) <|File.prefixLength|> @AccessFlag (PRIVATE,TRANSIENT,VARARGS);
  (|long|) <|File.serialVersionUID|> @AccessFlag (PRIVATE,STATIC,FINAL);
  (|java.nio.file.Path|) <|File.filePath|> @AccessFlag (PRIVATE,TRANSIENT,VOLATILE,VARARGS);
  (|boolean|) <|File.$assertionsDisabled|> @AccessFlag (STATIC,FINAL,SYNTHETIC);
}
  global (|char|) @@+|File.separatorChar|+ @AccessFlag (PUBLIC,STATIC,FINAL);
  global (|java.lang.String|) @@+|File.separator|+ @AccessFlag (PUBLIC,STATIC,FINAL);
  global (|char|) @@+|File.pathSeparatorChar|+ @AccessFlag (PUBLIC,STATIC,FINAL);
  global (|java.lang.String|) @@+|File.pathSeparator|+ @AccessFlag (PUBLIC,STATIC,FINAL);

  procedure (|boolean|) {|java.io.File.isInvalid()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (FINAL)
    @Signature "java.io.File.isInvalid()Z" 
  {
    local jmp;
    s0;
    s1;
    s2;

    #L00000Aa. s0:= [|v0|].<|java.io.File.status|>;
    #L00000Ab. if s0 != null then goto L00001Aa;
    #L00002Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00002Ab. call s1:= {|java.lang.String.indexOf(I)I|}(s0,0) @signature "java.lang.String.indexOf(I)I" @classDescriptor [|java.lang.String|] @type virtual;
    #L00002Ac. jmp:= [|v0|];
    #L00002Ad. if s1 >= 0 then goto L00003Aa;
    #L00002Ae. s2:= +|java.io.File$PathStatus.CHECKED|+;
    #L00002Af. jmp:= s2;
    #L00002Ag. goto L00004Aa;
    #L00003Aa. <@Frame (@Same1, 0, `[(|top|)], 1, `[(|java.lang.Object|), (|top|), (|top|)])>
    #L00003Ab. s0:= +|java.io.File$PathStatus.INVALID|+;
    #L00003Ac. jmp:= s0;
    #L00004Aa. <@Frame (@Full, 1, `[(|java.lang.Object|)], 2, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)])>
    #L00004Ab. jmp.<|java.io.File.status|>:= jmp;
    #L00001Aa. <@Frame (@Same, 0, `[(|java.lang.Object|)], 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)])>
    #L00001Ab. s0:= [|v0|].<|java.io.File.status|>;
    #L00001Ac. s1:= +|java.io.File$PathStatus.INVALID|+;
    #L00001Ad. if s0 != s1 then goto L00005Aa;
    #L00001Ae. jmp:= 1;
    #L00001Af. goto L00006Aa;
    #L00005Aa. <@Frame (@Same, 0, `[(|java.lang.Object|)], 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)])>
    #L00005Ab. jmp:= 0;
    #L00006Aa. <@Frame (@Same1, 0, `[(|java.lang.Object|)], 1, `[(|int|), (|java.lang.Object|), (|top|)])>
    #L00006Ab. return jmp;
  }
  procedure (|int|) {|java.io.File.getPrefixLength()I|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 1
    @Owner (|java.io.File|)
    @Access ()
    @Signature "java.io.File.getPrefixLength()I" 
  {
    local jmp;
    s0;

    #L00000Aa. s0:= [|v0|].<|java.io.File.prefixLength|>;
    #L00000Ab. return s0;
  }
  procedure (|void|) {|java.io.File.<init>(Ljava.lang.String;I)V|} ((|java.io.File|) [|v0|], (|java.lang.String|) [|v1|], (|int|) [|v2|]) 
    @MaxLocals 3
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PRIVATE,CONSTRUCTOR)
    @Signature "java.io.File.<init>(Ljava/lang/String;I)V" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.lang.Object.<init>()V|}([|v0|]) @signature "java.lang.Object.<init>()V" @classDescriptor [|java.lang.Object|] @type special;
    #L00001Aa. [|v0|].<|java.io.File.status|>:= null;
    #L00002Aa. [|v0|].<|java.io.File.path|>:= [|v1|];
    #L00003Aa. [|v0|].<|java.io.File.prefixLength|>:= [|v2|];
    #L00004Aa. return @void;
  }
  procedure (|void|) {|java.io.File.<init>(Ljava.lang.String;Ljava.io.File;)V|} ((|java.io.File|) [|v0|], (|java.lang.String|) [|v1|], (|java.io.File|) [|v2|]) 
    @MaxLocals 3
    @MaxStack 4
    @Owner (|java.io.File|)
    @Access (PRIVATE,CONSTRUCTOR)
    @Signature "java.io.File.<init>(Ljava/lang/String;Ljava/io/File;)V" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;

    #L00000Aa. call s0:= {|java.lang.Object.<init>()V|}([|v0|]) @signature "java.lang.Object.<init>()V" @classDescriptor [|java.lang.Object|] @type special;
    #L00001Aa. [|v0|].<|java.io.File.status|>:= null;
    #L00002Aa. s0:= +|java.io.File.$assertionsDisabled|+;
    #L00002Ab. if s0 != 0 then goto L00003Aa;
    #L00002Ac. s1:= [|v2|].<|java.io.File.path|>;
    #L00002Ad. if s1 != null then goto L00003Aa;
    #L00002Ae. s2:= new (|java.lang.AssertionError|);
    #L00002Af. call s3:= {|java.lang.AssertionError.<init>()V|}(s2) @signature "java.lang.AssertionError.<init>()V" @classDescriptor [|java.lang.AssertionError|] @type special;
    #L00002Ag. throw s2;
    #L00003Aa. <@Frame (@Full, 3, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00003Ab. s0:= +|java.io.File.$assertionsDisabled|+;
    #L00003Ac. if s0 != 0 then goto L00004Aa;
    #L00003Ad. s1:= [|v2|].<|java.io.File.path|>;
    #L00003Ae. call s2:= {|java.lang.String.equals(Ljava.lang.Object;)Z|}(s1,"") @signature "java.lang.String.equals(Ljava.lang.Object;)Z" @classDescriptor [|java.lang.String|] @type virtual;
    #L00003Af. if s2 == 0 then goto L00004Aa;
    #L00003Ag. s3:= new (|java.lang.AssertionError|);
    #L00003Ah. call s4:= {|java.lang.AssertionError.<init>()V|}(s3) @signature "java.lang.AssertionError.<init>()V" @classDescriptor [|java.lang.AssertionError|] @type special;
    #L00003Ai. throw s3;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. s1:= [|v2|].<|java.io.File.path|>;
    #L00004Ad. call s2:= {|java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;|}(s0,s1,[|v1|]) @signature "java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ae. [|v0|].<|java.io.File.path|>:= s2;
    #L00005Aa. s0:= [|v2|].<|java.io.File.prefixLength|>;
    #L00005Ab. [|v0|].<|java.io.File.prefixLength|>:= s0;
    #L00006Aa. return @void;
  }
  procedure (|void|) {|java.io.File.<init>(Ljava.lang.String;)V|} ((|java.io.File|) [|v0|], (|java.lang.String|) [|v1|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC,CONSTRUCTOR)
    @Signature "java.io.File.<init>(Ljava/lang/String;)V" 
  {
    local jmp;
    s0;
    s1;
    s2;

    #L00000Aa. call s0:= {|java.lang.Object.<init>()V|}([|v0|]) @signature "java.lang.Object.<init>()V" @classDescriptor [|java.lang.Object|] @type special;
    #L00001Aa. [|v0|].<|java.io.File.status|>:= null;
    #L00002Aa. if [|v1|] != null then goto L00003Aa;
    #L00004Aa. s0:= new (|java.lang.NullPointerException|);
    #L00004Ab. call s1:= {|java.lang.NullPointerException.<init>()V|}(s0) @signature "java.lang.NullPointerException.<init>()V" @classDescriptor [|java.lang.NullPointerException|] @type special;
    #L00004Ac. throw s0;
    #L00003Aa. <@Frame (@Full, 2, `[(|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00003Ab. s0:= +|java.io.File.fs|+;
    #L00003Ac. call s1:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s0,[|v1|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00003Ad. [|v0|].<|java.io.File.path|>:= s1;
    #L00005Aa. s0:= +|java.io.File.fs|+;
    #L00005Ab. s1:= [|v0|].<|java.io.File.path|>;
    #L00005Ac. call s2:= {|java.io.FileSystem.prefixLength(Ljava.lang.String;)I|}(s0,s1) @signature "java.io.FileSystem.prefixLength(Ljava.lang.String;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00005Ad. [|v0|].<|java.io.File.prefixLength|>:= s2;
    #L00006Aa. return @void;
  }
  procedure (|void|) {|java.io.File.<init>(Ljava.lang.String;Ljava.lang.String;)V|} ((|java.io.File|) [|v0|], (|java.lang.String|) [|v1|], (|java.lang.String|) [|v2|]) 
    @MaxLocals 3
    @MaxStack 5
    @Owner (|java.io.File|)
    @Access (PUBLIC,CONSTRUCTOR)
    @Signature "java.io.File.<init>(Ljava/lang/String;Ljava/lang/String;)V" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;
    s5;

    #L00000Aa. call s0:= {|java.lang.Object.<init>()V|}([|v0|]) @signature "java.lang.Object.<init>()V" @classDescriptor [|java.lang.Object|] @type special;
    #L00001Aa. [|v0|].<|java.io.File.status|>:= null;
    #L00002Aa. if [|v2|] != null then goto L00003Aa;
    #L00004Aa. s0:= new (|java.lang.NullPointerException|);
    #L00004Ab. call s1:= {|java.lang.NullPointerException.<init>()V|}(s0) @signature "java.lang.NullPointerException.<init>()V" @classDescriptor [|java.lang.NullPointerException|] @type special;
    #L00004Ac. throw s0;
    #L00003Aa. <@Frame (@Full, 3, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00003Ab. if [|v1|] == null then goto L00005Aa;
    #L00006Aa. call s0:= {|java.lang.String.equals(Ljava.lang.Object;)Z|}([|v1|],"") @signature "java.lang.String.equals(Ljava.lang.Object;)Z" @classDescriptor [|java.lang.String|] @type virtual;
    #L00006Ab. if s0 == 0 then goto L00007Aa;
    #L00008Aa. s0:= +|java.io.File.fs|+;
    #L00008Ab. s1:= +|java.io.File.fs|+;
    #L00008Ac. call s2:= {|java.io.FileSystem.getDefaultParent()Ljava.lang.String;|}(s1) @signature "java.io.FileSystem.getDefaultParent()Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00008Ad. s3:= +|java.io.File.fs|+;
    #L00008Ae. call s4:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s3,[|v2|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00008Af. call s5:= {|java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;|}(s0,s2,s4) @signature "java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00008Ag. [|v0|].<|java.io.File.path|>:= s5;
    #L00008Ah. goto L00009Aa;
    #L00007Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00007Ab. s0:= +|java.io.File.fs|+;
    #L00007Ac. s1:= +|java.io.File.fs|+;
    #L00007Ad. call s2:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s1,[|v1|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00007Ae. s3:= +|java.io.File.fs|+;
    #L00007Af. call s4:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s3,[|v2|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00007Ag. call s5:= {|java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;|}(s0,s2,s4) @signature "java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00007Ah. [|v0|].<|java.io.File.path|>:= s5;
    #L00007Ai. goto L00009Aa;
    #L00005Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. s0:= +|java.io.File.fs|+;
    #L00005Ac. call s1:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s0,[|v2|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00005Ad. [|v0|].<|java.io.File.path|>:= s1;
    #L00009Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00009Ab. s0:= +|java.io.File.fs|+;
    #L00009Ac. s1:= [|v0|].<|java.io.File.path|>;
    #L00009Ad. call s2:= {|java.io.FileSystem.prefixLength(Ljava.lang.String;)I|}(s0,s1) @signature "java.io.FileSystem.prefixLength(Ljava.lang.String;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00009Ae. [|v0|].<|java.io.File.prefixLength|>:= s2;
    #L00010Aa. return @void;
  }
  procedure (|void|) {|java.io.File.<init>(Ljava.io.File;Ljava.lang.String;)V|} ((|java.io.File|) [|v0|], (|java.io.File|) [|v1|], (|java.lang.String|) [|v2|]) 
    @MaxLocals 3
    @MaxStack 5
    @Owner (|java.io.File|)
    @Access (PUBLIC,CONSTRUCTOR)
    @Signature "java.io.File.<init>(Ljava/io/File;Ljava/lang/String;)V" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;
    s5;

    #L00000Aa. call s0:= {|java.lang.Object.<init>()V|}([|v0|]) @signature "java.lang.Object.<init>()V" @classDescriptor [|java.lang.Object|] @type special;
    #L00001Aa. [|v0|].<|java.io.File.status|>:= null;
    #L00002Aa. if [|v2|] != null then goto L00003Aa;
    #L00004Aa. s0:= new (|java.lang.NullPointerException|);
    #L00004Ab. call s1:= {|java.lang.NullPointerException.<init>()V|}(s0) @signature "java.lang.NullPointerException.<init>()V" @classDescriptor [|java.lang.NullPointerException|] @type special;
    #L00004Ac. throw s0;
    #L00003Aa. <@Frame (@Full, 3, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00003Ab. if [|v1|] == null then goto L00005Aa;
    #L00006Aa. s0:= [|v1|].<|java.io.File.path|>;
    #L00006Ab. call s1:= {|java.lang.String.equals(Ljava.lang.Object;)Z|}(s0,"") @signature "java.lang.String.equals(Ljava.lang.Object;)Z" @classDescriptor [|java.lang.String|] @type virtual;
    #L00006Ac. if s1 == 0 then goto L00007Aa;
    #L00008Aa. s0:= +|java.io.File.fs|+;
    #L00008Ab. s1:= +|java.io.File.fs|+;
    #L00008Ac. call s2:= {|java.io.FileSystem.getDefaultParent()Ljava.lang.String;|}(s1) @signature "java.io.FileSystem.getDefaultParent()Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00008Ad. s3:= +|java.io.File.fs|+;
    #L00008Ae. call s4:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s3,[|v2|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00008Af. call s5:= {|java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;|}(s0,s2,s4) @signature "java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00008Ag. [|v0|].<|java.io.File.path|>:= s5;
    #L00008Ah. goto L00009Aa;
    #L00007Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00007Ab. s0:= +|java.io.File.fs|+;
    #L00007Ac. s1:= [|v1|].<|java.io.File.path|>;
    #L00007Ad. s2:= +|java.io.File.fs|+;
    #L00007Ae. call s3:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s2,[|v2|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00007Af. call s4:= {|java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;|}(s0,s1,s3) @signature "java.io.FileSystem.resolve(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00007Ag. [|v0|].<|java.io.File.path|>:= s4;
    #L00007Ah. goto L00009Aa;
    #L00005Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. s0:= +|java.io.File.fs|+;
    #L00005Ac. call s1:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s0,[|v2|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00005Ad. [|v0|].<|java.io.File.path|>:= s1;
    #L00009Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00009Ab. s0:= +|java.io.File.fs|+;
    #L00009Ac. s1:= [|v0|].<|java.io.File.path|>;
    #L00009Ad. call s2:= {|java.io.FileSystem.prefixLength(Ljava.lang.String;)I|}(s0,s1) @signature "java.io.FileSystem.prefixLength(Ljava.lang.String;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00009Ae. [|v0|].<|java.io.File.prefixLength|>:= s2;
    #L00010Aa. return @void;
  }
  procedure (|void|) {|java.io.File.<init>(Ljava.net.URI;)V|} ((|java.io.File|) [|v0|], (|java.net.URI|) [|v1|]) 
    @MaxLocals 4
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC,CONSTRUCTOR)
    @Signature "java.io.File.<init>(Ljava/net/URI;)V" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v2|];
    [|v3|];

    #L00000Aa. call s0:= {|java.lang.Object.<init>()V|}([|v0|]) @signature "java.lang.Object.<init>()V" @classDescriptor [|java.lang.Object|] @type special;
    #L00001Aa. [|v0|].<|java.io.File.status|>:= null;
    #L00002Aa. call s0:= {|java.net.URI.isAbsolute()Z|}([|v1|]) @signature "java.net.URI.isAbsolute()Z" @classDescriptor [|java.net.URI|] @type virtual;
    #L00002Ab. if s0 != 0 then goto L00003Aa;
    #L00004Aa. s0:= new (|java.lang.IllegalArgumentException|);
    #L00004Ab. call s1:= {|java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V|}(s0,"URI is not absolute") @signature "java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.IllegalArgumentException|] @type special;
    #L00004Ac. throw s0;
    #L00003Aa. <@Frame (@Full, 2, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00003Ab. call s0:= {|java.net.URI.isOpaque()Z|}([|v1|]) @signature "java.net.URI.isOpaque()Z" @classDescriptor [|java.net.URI|] @type virtual;
    #L00003Ac. if s0 == 0 then goto L00005Aa;
    #L00006Aa. s0:= new (|java.lang.IllegalArgumentException|);
    #L00006Ab. call s1:= {|java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V|}(s0,"URI is not hierarchical") @signature "java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.IllegalArgumentException|] @type special;
    #L00006Ac. throw s0;
    #L00005Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00005Ab. call s0:= {|java.net.URI.getScheme()Ljava.lang.String;|}([|v1|]) @signature "java.net.URI.getScheme()Ljava.lang.String;" @classDescriptor [|java.net.URI|] @type virtual;
    #L00005Ac. [|v2|]:= s0 @type (|java.lang.Object|);
    #L00007Aa. if [|v2|] == null then goto L00008Aa;
    #L00007Ab. call s0:= {|java.lang.String.equalsIgnoreCase(Ljava.lang.String;)Z|}([|v2|],"file") @signature "java.lang.String.equalsIgnoreCase(Ljava.lang.String;)Z" @classDescriptor [|java.lang.String|] @type virtual;
    #L00007Ac. if s0 != 0 then goto L00009Aa;
    #L00008Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00008Ab. s0:= new (|java.lang.IllegalArgumentException|);
    #L00008Ac. call s1:= {|java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V|}(s0,"URI scheme is not \"file\"") @signature "java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.IllegalArgumentException|] @type special;
    #L00008Ad. throw s0;
    #L00009Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00009Ab. call s0:= {|java.net.URI.getAuthority()Ljava.lang.String;|}([|v1|]) @signature "java.net.URI.getAuthority()Ljava.lang.String;" @classDescriptor [|java.net.URI|] @type virtual;
    #L00009Ac. if s0 == null then goto L00010Aa;
    #L00011Aa. s0:= new (|java.lang.IllegalArgumentException|);
    #L00011Ab. call s1:= {|java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V|}(s0,"URI has an authority component") @signature "java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.IllegalArgumentException|] @type special;
    #L00011Ac. throw s0;
    #L00010Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00010Ab. call s0:= {|java.net.URI.getFragment()Ljava.lang.String;|}([|v1|]) @signature "java.net.URI.getFragment()Ljava.lang.String;" @classDescriptor [|java.net.URI|] @type virtual;
    #L00010Ac. if s0 == null then goto L00012Aa;
    #L00013Aa. s0:= new (|java.lang.IllegalArgumentException|);
    #L00013Ab. call s1:= {|java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V|}(s0,"URI has a fragment component") @signature "java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.IllegalArgumentException|] @type special;
    #L00013Ac. throw s0;
    #L00012Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00012Ab. call s0:= {|java.net.URI.getQuery()Ljava.lang.String;|}([|v1|]) @signature "java.net.URI.getQuery()Ljava.lang.String;" @classDescriptor [|java.net.URI|] @type virtual;
    #L00012Ac. if s0 == null then goto L00014Aa;
    #L00015Aa. s0:= new (|java.lang.IllegalArgumentException|);
    #L00015Ab. call s1:= {|java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V|}(s0,"URI has a query component") @signature "java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.IllegalArgumentException|] @type special;
    #L00015Ac. throw s0;
    #L00014Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00014Ab. call s0:= {|java.net.URI.getPath()Ljava.lang.String;|}([|v1|]) @signature "java.net.URI.getPath()Ljava.lang.String;" @classDescriptor [|java.net.URI|] @type virtual;
    #L00014Ac. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00016Aa. call s0:= {|java.lang.String.equals(Ljava.lang.Object;)Z|}([|v3|],"") @signature "java.lang.String.equals(Ljava.lang.Object;)Z" @classDescriptor [|java.lang.String|] @type virtual;
    #L00016Ab. if s0 == 0 then goto L00017Aa;
    #L00018Aa. s0:= new (|java.lang.IllegalArgumentException|);
    #L00018Ab. call s1:= {|java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V|}(s0,"URI path component is empty") @signature "java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.IllegalArgumentException|] @type special;
    #L00018Ac. throw s0;
    #L00017Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00017Ab. s0:= +|java.io.File.fs|+;
    #L00017Ac. call s1:= {|java.io.FileSystem.fromURIPath(Ljava.lang.String;)Ljava.lang.String;|}(s0,[|v3|]) @signature "java.io.FileSystem.fromURIPath(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00017Ad. [|v3|]:= s1 @type (|java.lang.Object|);
    #L00019Aa. s0:= +|java.io.File.separatorChar|+;
    #L00019Ab. if s0 == 47 then goto L00020Aa;
    #L00021Aa. s0:= +|java.io.File.separatorChar|+;
    #L00021Ab. call s1:= {|java.lang.String.replace(CC)Ljava.lang.String;|}([|v3|],47,s0) @signature "java.lang.String.replace(CC)Ljava.lang.String;" @classDescriptor [|java.lang.String|] @type virtual;
    #L00021Ac. [|v3|]:= s1 @type (|java.lang.Object|);
    #L00020Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00020Ab. s0:= +|java.io.File.fs|+;
    #L00020Ac. call s1:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s0,[|v3|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00020Ad. [|v0|].<|java.io.File.path|>:= s1;
    #L00022Aa. s0:= +|java.io.File.fs|+;
    #L00022Ab. s1:= [|v0|].<|java.io.File.path|>;
    #L00022Ac. call s2:= {|java.io.FileSystem.prefixLength(Ljava.lang.String;)I|}(s0,s1) @signature "java.io.FileSystem.prefixLength(Ljava.lang.String;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00022Ad. [|v0|].<|java.io.File.prefixLength|>:= s2;
    #L00023Aa. return @void;
  }
  procedure (|java.lang.String|) {|java.io.File.getName()Ljava.lang.String;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getName()Ljava/lang/String;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    [|v1|];

    #L00000Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00000Ab. s1:= +|java.io.File.separatorChar|+;
    #L00000Ac. call s2:= {|java.lang.String.lastIndexOf(I)I|}(s0,s1) @signature "java.lang.String.lastIndexOf(I)I" @classDescriptor [|java.lang.String|] @type virtual;
    #L00000Ad. [|v1|]:= s2 @type (|java.lang.Object|);
    #L00001Aa. s0:= [|v0|].<|java.io.File.prefixLength|>;
    #L00001Ab. if [|v1|] >= s0 then goto L00002Aa;
    #L00001Ac. s1:= [|v0|].<|java.io.File.path|>;
    #L00001Ad. s2:= [|v0|].<|java.io.File.prefixLength|>;
    #L00001Ae. call s3:= {|java.lang.String.substring(I)Ljava.lang.String;|}(s1,s2) @signature "java.lang.String.substring(I)Ljava.lang.String;" @classDescriptor [|java.lang.String|] @type virtual;
    #L00001Af. return s3;
    #L00002Aa. <@Frame (@Append, 1, `[(|int|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00002Ab. s0:= [|v0|].<|java.io.File.path|>;
    #L00002Ac. call s1:= {|java.lang.String.substring(I)Ljava.lang.String;|}(s0,[|v1|]+1) @signature "java.lang.String.substring(I)Ljava.lang.String;" @classDescriptor [|java.lang.String|] @type virtual;
    #L00002Ad. return s1;
  }
  procedure (|java.lang.String|) {|java.io.File.getParent()Ljava.lang.String;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getParent()Ljava/lang/String;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    [|v1|];

    #L00000Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00000Ab. s1:= +|java.io.File.separatorChar|+;
    #L00000Ac. call s2:= {|java.lang.String.lastIndexOf(I)I|}(s0,s1) @signature "java.lang.String.lastIndexOf(I)I" @classDescriptor [|java.lang.String|] @type virtual;
    #L00000Ad. [|v1|]:= s2 @type (|java.lang.Object|);
    #L00001Aa. s0:= [|v0|].<|java.io.File.prefixLength|>;
    #L00001Ab. if [|v1|] >= s0 then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.prefixLength|>;
    #L00003Ab. if s0 <= 0 then goto L00004Aa;
    #L00003Ac. s1:= [|v0|].<|java.io.File.path|>;
    #L00003Ad. call s2:= {|java.lang.String.length()I|}(s1) @signature "java.lang.String.length()I" @classDescriptor [|java.lang.String|] @type virtual;
    #L00003Ae. s3:= [|v0|].<|java.io.File.prefixLength|>;
    #L00003Af. if s2 <= s3 then goto L00004Aa;
    #L00005Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00005Ab. s1:= [|v0|].<|java.io.File.prefixLength|>;
    #L00005Ac. call s2:= {|java.lang.String.substring(II)Ljava.lang.String;|}(s0,0,s1) @signature "java.lang.String.substring(II)Ljava.lang.String;" @classDescriptor [|java.lang.String|] @type virtual;
    #L00005Ad. return s2;
    #L00004Aa. <@Frame (@Append, 1, `[(|int|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00004Ab. return null;
    #L00002Aa. <@Frame (@Same, 0, `[(|int|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00002Ab. s0:= [|v0|].<|java.io.File.path|>;
    #L00002Ac. call s1:= {|java.lang.String.substring(II)Ljava.lang.String;|}(s0,0,[|v1|]) @signature "java.lang.String.substring(II)Ljava.lang.String;" @classDescriptor [|java.lang.String|] @type virtual;
    #L00002Ad. return s1;
  }
  procedure (|java.io.File|) {|java.io.File.getParentFile()Ljava.io.File;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 4
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getParentFile()Ljava/io/File;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v1|];

    #L00000Aa. call s0:= {|java.io.File.getParent()Ljava.lang.String;|}([|v0|]) @signature "java.io.File.getParent()Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] != null then goto L00002Aa;
    #L00001Ab. return null;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. s0:= new (|java.io.File|);
    #L00002Ac. s1:= [|v0|].<|java.io.File.prefixLength|>;
    #L00002Ad. call s2:= {|java.io.File.<init>(Ljava.lang.String;I)V|}(s0,[|v1|],s1) @signature "java.io.File.<init>(Ljava.lang.String;I)V" @classDescriptor [|java.io.File|] @type special;
    #L00002Ae. return s0;
  }
  procedure (|java.lang.String|) {|java.io.File.getPath()Ljava.lang.String;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 1
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getPath()Ljava/lang/String;" 
  {
    local jmp;
    s0;

    #L00000Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00000Ab. return s0;
  }
  procedure (|boolean|) {|java.io.File.isAbsolute()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.isAbsolute()Z" 
  {
    local jmp;
    s0;
    s1;

    #L00000Aa. s0:= +|java.io.File.fs|+;
    #L00000Ab. call s1:= {|java.io.FileSystem.isAbsolute(Ljava.io.File;)Z|}(s0,[|v0|]) @signature "java.io.FileSystem.isAbsolute(Ljava.io.File;)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00000Ac. return s1;
  }
  procedure (|java.lang.String|) {|java.io.File.getAbsolutePath()Ljava.lang.String;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getAbsolutePath()Ljava/lang/String;" 
  {
    local jmp;
    s0;
    s1;

    #L00000Aa. s0:= +|java.io.File.fs|+;
    #L00000Ab. call s1:= {|java.io.FileSystem.resolve(Ljava.io.File;)Ljava.lang.String;|}(s0,[|v0|]) @signature "java.io.FileSystem.resolve(Ljava.io.File;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00000Ac. return s1;
  }
  procedure (|java.io.File|) {|java.io.File.getAbsoluteFile()Ljava.io.File;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 5
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getAbsoluteFile()Ljava/io/File;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    [|v1|];

    #L00000Aa. call s0:= {|java.io.File.getAbsolutePath()Ljava.lang.String;|}([|v0|]) @signature "java.io.File.getAbsolutePath()Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. s0:= new (|java.io.File|);
    #L00001Ab. s1:= +|java.io.File.fs|+;
    #L00001Ac. call s2:= {|java.io.FileSystem.prefixLength(Ljava.lang.String;)I|}(s1,[|v1|]) @signature "java.io.FileSystem.prefixLength(Ljava.lang.String;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00001Ad. call s3:= {|java.io.File.<init>(Ljava.lang.String;I)V|}(s0,[|v1|],s2) @signature "java.io.File.<init>(Ljava.lang.String;I)V" @classDescriptor [|java.io.File|] @type special;
    #L00001Ae. return s0;
  }
  procedure (|java.lang.String|) {|java.io.File.getCanonicalPath()Ljava.lang.String;|} ((|java.io.File|) [|v0|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 1
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getCanonicalPath()Ljava/lang/String;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;

    #L00000Aa. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. if s0 == 0 then goto L00001Aa;
    #L00002Aa. s0:= new (|java.io.IOException|);
    #L00002Ab. call s1:= {|java.io.IOException.<init>(Ljava.lang.String;)V|}(s0,"Invalid file path") @signature "java.io.IOException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.io.IOException|] @type special;
    #L00002Ac. throw s0;
    #L00001Aa. <@Frame (@Same, 0, `[(|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00001Ab. s0:= +|java.io.File.fs|+;
    #L00001Ac. s1:= +|java.io.File.fs|+;
    #L00001Ad. call s2:= {|java.io.FileSystem.resolve(Ljava.io.File;)Ljava.lang.String;|}(s1,[|v0|]) @signature "java.io.FileSystem.resolve(Ljava.io.File;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00001Ae. call s3:= {|java.io.FileSystem.canonicalize(Ljava.lang.String;)Ljava.lang.String;|}(s0,s2) @signature "java.io.FileSystem.canonicalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00001Af. return s3;
  }
  procedure (|java.io.File|) {|java.io.File.getCanonicalFile()Ljava.io.File;|} ((|java.io.File|) [|v0|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 2
    @MaxStack 5
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getCanonicalFile()Ljava/io/File;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    [|v1|];

    #L00000Aa. call s0:= {|java.io.File.getCanonicalPath()Ljava.lang.String;|}([|v0|]) @signature "java.io.File.getCanonicalPath()Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. s0:= new (|java.io.File|);
    #L00001Ab. s1:= +|java.io.File.fs|+;
    #L00001Ac. call s2:= {|java.io.FileSystem.prefixLength(Ljava.lang.String;)I|}(s1,[|v1|]) @signature "java.io.FileSystem.prefixLength(Ljava.lang.String;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00001Ad. call s3:= {|java.io.File.<init>(Ljava.lang.String;I)V|}(s0,[|v1|],s2) @signature "java.io.File.<init>(Ljava.lang.String;I)V" @classDescriptor [|java.io.File|] @type special;
    #L00001Ae. return s0;
  }
  procedure (|java.lang.String|) {|java.io.File.slashify(Ljava.lang.String;Z)Ljava.lang.String;|} ((|java.lang.String|) [|v0|], (|boolean|) [|v1|]) 
    @MaxLocals 3
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PRIVATE,STATIC)
    @Signature "java.io.File.slashify(Ljava/lang/String;Z)Ljava/lang/String;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;
    [|v2|];

    #L00000Aa. [|v2|]:= [|v0|] @type java.lang.Object;
    #L00001Aa. s0:= +|java.io.File.separatorChar|+;
    #L00001Ab. if s0 == 47 then goto L00002Aa;
    #L00003Aa. s0:= +|java.io.File.separatorChar|+;
    #L00003Ab. call s1:= {|java.lang.String.replace(CC)Ljava.lang.String;|}([|v2|],s0,47) @signature "java.lang.String.replace(CC)Ljava.lang.String;" @classDescriptor [|java.lang.String|] @type virtual;
    #L00003Ac. [|v2|]:= s1 @type (|java.lang.Object|);
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.lang.String.startsWith(Ljava.lang.String;)Z|}([|v2|],"/") @signature "java.lang.String.startsWith(Ljava.lang.String;)Z" @classDescriptor [|java.lang.String|] @type virtual;
    #L00002Ac. if s0 != 0 then goto L00004Aa;
    #L00005Aa. s0:= new (|java.lang.StringBuilder|);
    #L00005Ab. call s1:= {|java.lang.StringBuilder.<init>()V|}(s0) @signature "java.lang.StringBuilder.<init>()V" @classDescriptor [|java.lang.StringBuilder|] @type special;
    #L00005Ac. call s2:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s0,"/") @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00005Ad. call s3:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s2,[|v2|]) @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00005Ae. call s4:= {|java.lang.StringBuilder.toString()Ljava.lang.String;|}(s3) @signature "java.lang.StringBuilder.toString()Ljava.lang.String;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00005Af. [|v2|]:= s4 @type (|java.lang.Object|);
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00004Ab. call s0:= {|java.lang.String.endsWith(Ljava.lang.String;)Z|}([|v2|],"/") @signature "java.lang.String.endsWith(Ljava.lang.String;)Z" @classDescriptor [|java.lang.String|] @type virtual;
    #L00004Ac. if s0 != 0 then goto L00006Aa;
    #L00004Ad. if [|v1|] == 0 then goto L00006Aa;
    #L00007Aa. s0:= new (|java.lang.StringBuilder|);
    #L00007Ab. call s1:= {|java.lang.StringBuilder.<init>()V|}(s0) @signature "java.lang.StringBuilder.<init>()V" @classDescriptor [|java.lang.StringBuilder|] @type special;
    #L00007Ac. call s2:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s0,[|v2|]) @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00007Ad. call s3:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s2,"/") @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00007Ae. call s4:= {|java.lang.StringBuilder.toString()Ljava.lang.String;|}(s3) @signature "java.lang.StringBuilder.toString()Ljava.lang.String;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00007Af. [|v2|]:= s4 @type (|java.lang.Object|);
    #L00006Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00006Ab. return [|v2|];
  }
  procedure (|java.net.URL|) {|java.io.File.toURL()Ljava.net.URL;|} ((|java.io.File|) [|v0|]) 
    @Throws [|java.net.MalformedURLException|]
    @MaxLocals 1
    @MaxStack 6
    @Owner (|java.io.File|)
    @(|Ljava.lang.Deprecated;|) 
    @Access (PUBLIC)
    @Signature "java.io.File.toURL()Ljava/net/URL;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;

    #L00000Aa. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. if s0 == 0 then goto L00001Aa;
    #L00002Aa. s0:= new (|java.net.MalformedURLException|);
    #L00002Ab. call s1:= {|java.net.MalformedURLException.<init>(Ljava.lang.String;)V|}(s0,"Invalid file path") @signature "java.net.MalformedURLException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.net.MalformedURLException|] @type special;
    #L00002Ac. throw s0;
    #L00001Aa. <@Frame (@Same, 0, `[(|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00001Ab. s0:= new (|java.net.URL|);
    #L00001Ac. call s1:= {|java.io.File.getAbsolutePath()Ljava.lang.String;|}([|v0|]) @signature "java.io.File.getAbsolutePath()Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00001Ad. call s2:= {|java.io.File.isDirectory()Z|}([|v0|]) @signature "java.io.File.isDirectory()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00001Ae. call s3:= {|java.io.File.slashify(Ljava.lang.String;Z)Ljava.lang.String;|}(s1,s2) @signature "java.io.File.slashify(Ljava.lang.String;Z)Ljava.lang.String;" @classDescriptor [|java.io.File|] @type direct;
    #L00001Af. call s4:= {|java.net.URL.<init>(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V|}(s0,"file","",s3) @signature "java.net.URL.<init>(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V" @classDescriptor [|java.net.URL|] @type special;
    #L00001Ag. return s0;
  }
  procedure (|java.net.URI|) {|java.io.File.toURI()Ljava.net.URI;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 3
    @MaxStack 6
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.toURI()Ljava/net/URI;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;
    [|v1|];
    [|v2|];

    #L00000Aa. call s0:= {|java.io.File.getAbsoluteFile()Ljava.io.File;|}([|v0|]) @signature "java.io.File.getAbsoluteFile()Ljava.io.File;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00003Aa. call s0:= {|java.io.File.getPath()Ljava.lang.String;|}([|v1|]) @signature "java.io.File.getPath()Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00003Ab. call s1:= {|java.io.File.isDirectory()Z|}([|v1|]) @signature "java.io.File.isDirectory()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00003Ac. call s2:= {|java.io.File.slashify(Ljava.lang.String;Z)Ljava.lang.String;|}(s0,s1) @signature "java.io.File.slashify(Ljava.lang.String;Z)Ljava.lang.String;" @classDescriptor [|java.io.File|] @type direct;
    #L00003Ad. [|v2|]:= s2 @type (|java.lang.Object|);
    #L00004Aa. call s0:= {|java.lang.String.startsWith(Ljava.lang.String;)Z|}([|v2|],"//") @signature "java.lang.String.startsWith(Ljava.lang.String;)Z" @classDescriptor [|java.lang.String|] @type virtual;
    #L00004Ab. if s0 == 0 then goto L00005Aa;
    #L00006Aa. s0:= new (|java.lang.StringBuilder|);
    #L00006Ab. call s1:= {|java.lang.StringBuilder.<init>()V|}(s0) @signature "java.lang.StringBuilder.<init>()V" @classDescriptor [|java.lang.StringBuilder|] @type special;
    #L00006Ac. call s2:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s0,"//") @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00006Ad. call s3:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s2,[|v2|]) @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00006Ae. call s4:= {|java.lang.StringBuilder.toString()Ljava.lang.String;|}(s3) @signature "java.lang.StringBuilder.toString()Ljava.lang.String;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00006Af. [|v2|]:= s4 @type (|java.lang.Object|);
    #L00005Aa. <@Frame (@Append, 2, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. s0:= new (|java.net.URI|);
    #L00005Ac. call s1:= {|java.net.URI.<init>(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V|}(s0,"file",null,[|v2|],null) @signature "java.net.URI.<init>(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V" @classDescriptor [|java.net.URI|] @type special;
    #L00001Aa. return s0;
    #L00002Aa. <@Frame (@Full, 1, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)], 1, `[(|java.lang.Object|), (|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. [|v1|]:= Exception @type java.lang.Object;
    #L00007Aa. s0:= new (|java.lang.Error|);
    #L00007Ab. call s1:= {|java.lang.Error.<init>(Ljava.lang.Throwable;)V|}(s0,[|v1|]) @signature "java.lang.Error.<init>(Ljava.lang.Throwable;)V" @classDescriptor [|java.lang.Error|] @type special;
    #L00007Ac. throw s0;
      catch (|java.net.URISyntaxException|) @[L00000Aa..L00001Aa] goto L00002Aa;
  }
  procedure (|boolean|) {|java.io.File.canRead()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.canRead()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.checkAccess(Ljava.io.File;I)Z|}(s0,[|v0|],4) @signature "java.io.FileSystem.checkAccess(Ljava.io.File;I)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.canWrite()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.canWrite()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.checkAccess(Ljava.io.File;I)Z|}(s0,[|v0|],2) @signature "java.io.FileSystem.checkAccess(Ljava.io.File;I)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.exists()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.exists()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.getBooleanAttributes(Ljava.io.File;)I|}(s0,[|v0|]) @signature "java.io.FileSystem.getBooleanAttributes(Ljava.io.File;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. if s1^&1 == 0 then goto L00006Aa;
    #L00004Ae. jmp:= 1;
    #L00004Af. goto L00007Aa;
    #L00006Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00006Ab. jmp:= 0;
    #L00007Aa. <@Frame (@Same1, 0, `[(|java.lang.Object|), (|top|)], 1, `[(|int|), (|top|)])>
    #L00007Ab. return jmp;
  }
  procedure (|boolean|) {|java.io.File.isDirectory()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.isDirectory()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.getBooleanAttributes(Ljava.io.File;)I|}(s0,[|v0|]) @signature "java.io.FileSystem.getBooleanAttributes(Ljava.io.File;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. if s1^&4 == 0 then goto L00006Aa;
    #L00004Ae. jmp:= 1;
    #L00004Af. goto L00007Aa;
    #L00006Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00006Ab. jmp:= 0;
    #L00007Aa. <@Frame (@Same1, 0, `[(|java.lang.Object|), (|top|)], 1, `[(|int|), (|top|)])>
    #L00007Ab. return jmp;
  }
  procedure (|boolean|) {|java.io.File.isFile()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.isFile()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.getBooleanAttributes(Ljava.io.File;)I|}(s0,[|v0|]) @signature "java.io.FileSystem.getBooleanAttributes(Ljava.io.File;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. if s1^&2 == 0 then goto L00006Aa;
    #L00004Ae. jmp:= 1;
    #L00004Af. goto L00007Aa;
    #L00006Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00006Ab. jmp:= 0;
    #L00007Aa. <@Frame (@Same1, 0, `[(|java.lang.Object|), (|top|)], 1, `[(|int|), (|top|)])>
    #L00007Ab. return jmp;
  }
  procedure (|boolean|) {|java.io.File.isHidden()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.isHidden()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.getBooleanAttributes(Ljava.io.File;)I|}(s0,[|v0|]) @signature "java.io.FileSystem.getBooleanAttributes(Ljava.io.File;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. if s1^&8 == 0 then goto L00006Aa;
    #L00004Ae. jmp:= 1;
    #L00004Af. goto L00007Aa;
    #L00006Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00006Ab. jmp:= 0;
    #L00007Aa. <@Frame (@Same1, 0, `[(|java.lang.Object|), (|top|)], 1, `[(|int|), (|top|)])>
    #L00007Ab. return jmp;
  }
  procedure (|long|) {|java.io.File.lastModified()J|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.lastModified()J" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.getLastModifiedTime(Ljava.io.File;)J|}(s0,[|v0|]) @signature "java.io.FileSystem.getLastModifiedTime(Ljava.io.File;)J" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|long|) {|java.io.File.length()J|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.length()J" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.getLength(Ljava.io.File;)J|}(s0,[|v0|]) @signature "java.io.FileSystem.getLength(Ljava.io.File;)J" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.createNewFile()Z|} ((|java.io.File|) [|v0|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.createNewFile()Z" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00001Ab. s0:= [|v0|].<|java.io.File.path|>;
    #L00001Ac. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00003Aa;
    #L00004Aa. s0:= new (|java.io.IOException|);
    #L00004Ab. call s1:= {|java.io.IOException.<init>(Ljava.lang.String;)V|}(s0,"Invalid file path") @signature "java.io.IOException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.io.IOException|] @type special;
    #L00004Ac. throw s0;
    #L00003Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00003Ab. s0:= +|java.io.File.fs|+;
    #L00003Ac. s1:= [|v0|].<|java.io.File.path|>;
    #L00003Ad. call s2:= {|java.io.FileSystem.createFileExclusively(Ljava.lang.String;)Z|}(s0,s1) @signature "java.io.FileSystem.createFileExclusively(Ljava.lang.String;)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00003Ae. return s2;
  }
  procedure (|boolean|) {|java.io.File.delete()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.delete()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkDelete(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkDelete(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.delete(Ljava.io.File;)Z|}(s0,[|v0|]) @signature "java.io.FileSystem.delete(Ljava.io.File;)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|void|) {|java.io.File.deleteOnExit()V|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.deleteOnExit()V" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkDelete(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkDelete(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return @void;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= [|v0|].<|java.io.File.path|>;
    #L00004Ac. call s1:= {|java.io.DeleteOnExitHook.add(Ljava.lang.String;)V|}(s0) @signature "java.io.DeleteOnExitHook.add(Ljava.lang.String;)V" @classDescriptor [|java.io.DeleteOnExitHook|] @type direct;
    #L00006Aa. return @void;
  }
  procedure (|java.lang.String[]|) {|java.io.File.list()[Ljava.lang.String;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.list()[Ljava/lang/String;" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return null;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.list(Ljava.io.File;)[Ljava.lang.String;|}(s0,[|v0|]) @signature "java.io.FileSystem.list(Ljava.io.File;)[Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|java.lang.String[]|) {|java.io.File.list(Ljava.io.FilenameFilter;)[Ljava.lang.String;|} ((|java.io.File|) [|v0|], (|java.io.FilenameFilter|) [|v1|]) 
    @MaxLocals 5
    @MaxStack 4
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.list(Ljava/io/FilenameFilter;)[Ljava/lang/String;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v2|];
    [|v3|];
    [|v4|];

    #L00000Aa. call s0:= {|java.io.File.list()[Ljava.lang.String;|}([|v0|]) @signature "java.io.File.list()[Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. [|v2|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v2|] == null then goto L00002Aa;
    #L00001Ab. if [|v1|] != null then goto L00003Aa;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.String[]|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. return [|v2|];
    #L00003Aa. <@Frame (@Same, 0, `[(|java.lang.String[]|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00003Ab. s0:= new (|java.util.ArrayList|);
    #L00003Ac. call s1:= {|java.util.ArrayList.<init>()V|}(s0) @signature "java.util.ArrayList.<init>()V" @classDescriptor [|java.util.ArrayList|] @type special;
    #L00003Ad. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00004Aa. [|v4|]:= 0 @type (|int|);
    #L00005Aa. <@Frame (@Append, 2, `[(|java.lang.Object|), (|int|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. if [|v4|] >= [|v2|].length then goto L00006Aa;
    #L00007Aa. s0:= [|v2|][[|v4|]];
    #L00007Ab. call s1:= {|java.io.FilenameFilter.accept(Ljava.io.File;Ljava.lang.String;)Z|}([|v1|],[|v0|],s0) @signature "java.io.FilenameFilter.accept(Ljava.io.File;Ljava.lang.String;)Z" @classDescriptor [|java.io.FilenameFilter|] @type interface;
    #L00007Ac. if s1 == 0 then goto L00008Aa;
    #L00009Aa. s0:= [|v2|][[|v4|]];
    #L00009Ab. call s1:= {|java.util.List.add(Ljava.lang.Object;)Z|}([|v3|],s0) @signature "java.util.List.add(Ljava.lang.Object;)Z" @classDescriptor [|java.util.List|] @type interface;
    #L00008Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|int|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00008Ab. [|v4|]:= [|v4|] + 1 @type (|int|);
    #L00008Ac. goto L00005Aa;
    #L00006Aa. <@Frame (@Chop, 1, `[(|java.lang.Object|), (|int|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00006Ab. call s0:= {|java.util.List.size()I|}([|v3|]) @signature "java.util.List.size()I" @classDescriptor [|java.util.List|] @type interface;
    #L00006Ac. s1:= new (|java.lang.String|)[s0];
    #L00006Ad. call s2:= {|java.util.List.toArray([Ljava.lang.Object;)[Ljava.lang.Object;|}([|v3|],s1) @signature "java.util.List.toArray([Ljava.lang.Object;)[Ljava.lang.Object;" @classDescriptor [|java.util.List|] @type interface;
    #L00006Ae. return ((|[Ljava.lang.String;|)) s2;
  }
  procedure (|java.io.File[]|) {|java.io.File.listFiles()[Ljava.io.File;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 5
    @MaxStack 6
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.listFiles()[Ljava/io/File;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v1|];
    [|v2|];
    [|v3|];
    [|v4|];

    #L00000Aa. call s0:= {|java.io.File.list()[Ljava.lang.String;|}([|v0|]) @signature "java.io.File.list()[Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] != null then goto L00002Aa;
    #L00001Ab. return null;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.String[]|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. [|v2|]:= [|v1|].length @type (|int|);
    #L00003Aa. s0:= new (|java.io.File|)[[|v2|]];
    #L00003Ab. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00004Aa. [|v4|]:= 0 @type (|int|);
    #L00005Aa. <@Frame (@Append, 3, `[(|int|), (|java.io.File[]|), (|int|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. if [|v4|] >= [|v2|] then goto L00006Aa;
    #L00007Aa. s0:= new (|java.io.File|);
    #L00007Ab. s1:= [|v1|][[|v4|]];
    #L00007Ac. call s2:= {|java.io.File.<init>(Ljava.lang.String;Ljava.io.File;)V|}(s0,s1,[|v0|]) @signature "java.io.File.<init>(Ljava.lang.String;Ljava.io.File;)V" @classDescriptor [|java.io.File|] @type special;
    #L00007Ad. [|v3|][[|v4|]]:= s0;
    #L00008Aa. [|v4|]:= [|v4|] + 1 @type (|int|);
    #L00008Ab. goto L00005Aa;
    #L00006Aa. <@Frame (@Chop, 1, `[(|int|), (|java.io.File[]|), (|int|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00006Ab. return [|v3|];
  }
  procedure (|java.io.File[]|) {|java.io.File.listFiles(Ljava.io.FilenameFilter;)[Ljava.io.File;|} ((|java.io.File|) [|v0|], (|java.io.FilenameFilter|) [|v1|]) 
    @MaxLocals 8
    @MaxStack 5
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.listFiles(Ljava/io/FilenameFilter;)[Ljava/io/File;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v2|];
    [|v3|];
    [|v4|];
    [|v5|];
    [|v6|];
    [|v7|];

    #L00000Aa. call s0:= {|java.io.File.list()[Ljava.lang.String;|}([|v0|]) @signature "java.io.File.list()[Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. [|v2|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v2|] != null then goto L00002Aa;
    #L00001Ab. return null;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.String[]|), (|top|), (|top|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. s0:= new (|java.util.ArrayList|);
    #L00002Ac. call s1:= {|java.util.ArrayList.<init>()V|}(s0) @signature "java.util.ArrayList.<init>()V" @classDescriptor [|java.util.ArrayList|] @type special;
    #L00002Ad. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00003Aa. [|v4|]:= [|v2|] @type java.lang.Object;
    #L00003Ab. [|v5|]:= [|v4|].length @type (|int|);
    #L00003Ac. [|v6|]:= 0 @type (|int|);
    #L00004Aa. <@Frame (@Full, 7, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.String[]|), (|java.lang.Object|), (|java.lang.String[]|), (|int|), (|int|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00004Ab. if [|v6|] >= [|v5|] then goto L00005Aa;
    #L00004Ac. s0:= [|v4|][[|v6|]];
    #L00004Ad. [|v7|]:= s0 @type (|java.lang.Object|);
    #L00006Aa. if [|v1|] == null then goto L00007Aa;
    #L00006Ab. call s0:= {|java.io.FilenameFilter.accept(Ljava.io.File;Ljava.lang.String;)Z|}([|v1|],[|v0|],[|v7|]) @signature "java.io.FilenameFilter.accept(Ljava.io.File;Ljava.lang.String;)Z" @classDescriptor [|java.io.FilenameFilter|] @type interface;
    #L00006Ac. if s0 == 0 then goto L00008Aa;
    #L00007Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.String[]|), (|java.lang.Object|), (|java.lang.String[]|), (|int|), (|int|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00007Ab. s0:= new (|java.io.File|);
    #L00007Ac. call s1:= {|java.io.File.<init>(Ljava.lang.String;Ljava.io.File;)V|}(s0,[|v7|],[|v0|]) @signature "java.io.File.<init>(Ljava.lang.String;Ljava.io.File;)V" @classDescriptor [|java.io.File|] @type special;
    #L00007Ad. call s2:= {|java.util.ArrayList.add(Ljava.lang.Object;)Z|}([|v3|],s0) @signature "java.util.ArrayList.add(Ljava.lang.Object;)Z" @classDescriptor [|java.util.ArrayList|] @type virtual;
    #L00008Aa. <@Frame (@Chop, 1, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.String[]|), (|java.lang.Object|), (|java.lang.String[]|), (|int|), (|int|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00008Ab. [|v6|]:= [|v6|] + 1 @type (|int|);
    #L00008Ac. goto L00004Aa;
    #L00005Aa. <@Frame (@Chop, 3, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.String[]|), (|java.lang.Object|), (|java.lang.String[]|), (|int|), (|int|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. call s0:= {|java.util.ArrayList.size()I|}([|v3|]) @signature "java.util.ArrayList.size()I" @classDescriptor [|java.util.ArrayList|] @type virtual;
    #L00005Ac. s1:= new (|java.io.File|)[s0];
    #L00005Ad. call s2:= {|java.util.ArrayList.toArray([Ljava.lang.Object;)[Ljava.lang.Object;|}([|v3|],s1) @signature "java.util.ArrayList.toArray([Ljava.lang.Object;)[Ljava.lang.Object;" @classDescriptor [|java.util.ArrayList|] @type virtual;
    #L00005Ae. return ((|[Ljava.io.File;|)) s2;
  }
  procedure (|java.io.File[]|) {|java.io.File.listFiles(Ljava.io.FileFilter;)[Ljava.io.File;|} ((|java.io.File|) [|v0|], (|java.io.FileFilter|) [|v1|]) 
    @MaxLocals 9
    @MaxStack 4
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.listFiles(Ljava/io/FileFilter;)[Ljava/io/File;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v2|];
    [|v3|];
    [|v4|];
    [|v5|];
    [|v6|];
    [|v7|];
    [|v8|];

    #L00000Aa. call s0:= {|java.io.File.list()[Ljava.lang.String;|}([|v0|]) @signature "java.io.File.list()[Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. [|v2|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v2|] != null then goto L00002Aa;
    #L00001Ab. return null;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.String[]|), (|top|), (|top|), (|top|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. s0:= new (|java.util.ArrayList|);
    #L00002Ac. call s1:= {|java.util.ArrayList.<init>()V|}(s0) @signature "java.util.ArrayList.<init>()V" @classDescriptor [|java.util.ArrayList|] @type special;
    #L00002Ad. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00003Aa. [|v4|]:= [|v2|] @type java.lang.Object;
    #L00003Ab. [|v5|]:= [|v4|].length @type (|int|);
    #L00003Ac. [|v6|]:= 0 @type (|int|);
    #L00004Aa. <@Frame (@Full, 7, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.String[]|), (|java.lang.Object|), (|java.lang.String[]|), (|int|), (|int|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00004Ab. if [|v6|] >= [|v5|] then goto L00005Aa;
    #L00004Ac. s0:= [|v4|][[|v6|]];
    #L00004Ad. [|v7|]:= s0 @type (|java.lang.Object|);
    #L00006Aa. s0:= new (|java.io.File|);
    #L00006Ab. call s1:= {|java.io.File.<init>(Ljava.lang.String;Ljava.io.File;)V|}(s0,[|v7|],[|v0|]) @signature "java.io.File.<init>(Ljava.lang.String;Ljava.io.File;)V" @classDescriptor [|java.io.File|] @type special;
    #L00006Ac. [|v8|]:= s0 @type (|java.lang.Object|);
    #L00007Aa. if [|v1|] == null then goto L00008Aa;
    #L00007Ab. call s0:= {|java.io.FileFilter.accept(Ljava.io.File;)Z|}([|v1|],[|v8|]) @signature "java.io.FileFilter.accept(Ljava.io.File;)Z" @classDescriptor [|java.io.FileFilter|] @type interface;
    #L00007Ac. if s0 == 0 then goto L00009Aa;
    #L00008Aa. <@Frame (@Append, 2, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.String[]|), (|java.lang.Object|), (|java.lang.String[]|), (|int|), (|int|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00008Ab. call s0:= {|java.util.ArrayList.add(Ljava.lang.Object;)Z|}([|v3|],[|v8|]) @signature "java.util.ArrayList.add(Ljava.lang.Object;)Z" @classDescriptor [|java.util.ArrayList|] @type virtual;
    #L00009Aa. <@Frame (@Chop, 2, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.String[]|), (|java.lang.Object|), (|java.lang.String[]|), (|int|), (|int|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00009Ab. [|v6|]:= [|v6|] + 1 @type (|int|);
    #L00009Ac. goto L00004Aa;
    #L00005Aa. <@Frame (@Chop, 3, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.String[]|), (|java.lang.Object|), (|java.lang.String[]|), (|int|), (|int|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. call s0:= {|java.util.ArrayList.size()I|}([|v3|]) @signature "java.util.ArrayList.size()I" @classDescriptor [|java.util.ArrayList|] @type virtual;
    #L00005Ac. s1:= new (|java.io.File|)[s0];
    #L00005Ad. call s2:= {|java.util.ArrayList.toArray([Ljava.lang.Object;)[Ljava.lang.Object;|}([|v3|],s1) @signature "java.util.ArrayList.toArray([Ljava.lang.Object;)[Ljava.lang.Object;" @classDescriptor [|java.util.ArrayList|] @type virtual;
    #L00005Ae. return ((|[Ljava.io.File;|)) s2;
  }
  procedure (|boolean|) {|java.io.File.mkdir()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.mkdir()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.createDirectory(Ljava.io.File;)Z|}(s0,[|v0|]) @signature "java.io.FileSystem.createDirectory(Ljava.io.File;)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.mkdirs()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 3
    @MaxStack 1
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.mkdirs()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];
    [|v2|];

    #L00003Aa. call s0:= {|java.io.File.exists()Z|}([|v0|]) @signature "java.io.File.exists()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00003Ab. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|top|), (|top|), (|top|)], 0, `[(|top|)])>
    #L00004Ab. call s0:= {|java.io.File.mkdir()Z|}([|v0|]) @signature "java.io.File.mkdir()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00004Ac. if s0 == 0 then goto L00006Aa;
    #L00007Aa. return 1;
    #L00006Aa. <@Frame (@Same, 0, `[(|top|), (|top|), (|top|)], 0, `[(|top|)])>
    #L00006Ab. [|v1|]:= null @type (|java.lang.Object|);
    #L00000Aa. call s0:= {|java.io.File.getCanonicalFile()Ljava.io.File;|}([|v0|]) @signature "java.io.File.getCanonicalFile()Ljava.io.File;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. goto L00008Aa;
    #L00002Aa. <@Frame (@Full, 2, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)], 1, `[(|java.lang.Object|)])>
    #L00002Ab. [|v2|]:= Exception @type java.lang.Object;
    #L00009Aa. return 0;
    #L00008Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)], 0, `[(|java.lang.Object|)])>
    #L00008Ab. call s0:= {|java.io.File.getParentFile()Ljava.io.File;|}([|v1|]) @signature "java.io.File.getParentFile()Ljava.io.File;" @classDescriptor [|java.io.File|] @type virtual;
    #L00008Ac. [|v2|]:= s0 @type (|java.lang.Object|);
    #L00010Aa. if [|v2|] == null then goto L00011Aa;
    #L00010Ab. call s0:= {|java.io.File.mkdirs()Z|}([|v2|]) @signature "java.io.File.mkdirs()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00010Ac. if s0 != 0 then goto L00012Aa;
    #L00010Ad. call s1:= {|java.io.File.exists()Z|}([|v2|]) @signature "java.io.File.exists()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00010Ae. if s1 == 0 then goto L00011Aa;
    #L00012Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)], 0, `[(|java.lang.Object|)])>
    #L00012Ab. call s0:= {|java.io.File.mkdir()Z|}([|v1|]) @signature "java.io.File.mkdir()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00012Ac. if s0 == 0 then goto L00011Aa;
    #L00012Ad. jmp:= 1;
    #L00012Ae. goto L00013Aa;
    #L00011Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)], 0, `[(|java.lang.Object|)])>
    #L00011Ab. jmp:= 0;
    #L00013Aa. <@Frame (@Same1, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|)], 1, `[(|int|)])>
    #L00013Ab. return jmp;
      catch (|java.io.IOException|) @[L00000Aa..L00001Aa] goto L00002Aa;
  }
  procedure (|boolean|) {|java.io.File.renameTo(Ljava.io.File;)Z|} ((|java.io.File|) [|v0|], (|java.io.File|) [|v1|]) 
    @MaxLocals 3
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.renameTo(Ljava/io/File;)Z" 
  {
    local jmp;
    s0;
    s1;
    [|v2|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v2|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v2|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v2|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00004Aa. s0:= [|v1|].<|java.io.File.path|>;
    #L00004Ab. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v2|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00002Ab. if [|v1|] != null then goto L00005Aa;
    #L00006Aa. s0:= new (|java.lang.NullPointerException|);
    #L00006Ab. call s1:= {|java.lang.NullPointerException.<init>()V|}(s0) @signature "java.lang.NullPointerException.<init>()V" @classDescriptor [|java.lang.NullPointerException|] @type special;
    #L00006Ac. throw s0;
    #L00005Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00005Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00005Ac. if s0 != 0 then goto L00007Aa;
    #L00005Ad. call s1:= {|java.io.File.isInvalid()Z|}([|v1|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00005Ae. if s1 == 0 then goto L00008Aa;
    #L00007Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00007Ab. return 0;
    #L00008Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00008Ab. s0:= +|java.io.File.fs|+;
    #L00008Ac. call s1:= {|java.io.FileSystem.rename(Ljava.io.File;Ljava.io.File;)Z|}(s0,[|v0|],[|v1|]) @signature "java.io.FileSystem.rename(Ljava.io.File;Ljava.io.File;)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00008Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.setLastModified(J)Z|} ((|java.io.File|) [|v0|], (|long|) [|v1|]) 
    @MaxLocals 4
    @MaxStack 4
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.setLastModified(J)Z" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v2|];
    [|v3|];

    #L00000Aa. s0:= lcmp(0,[|v1|]);
    #L00000Ab. if s0 >= 0 then goto L00001Aa;
    #L00000Ac. s1:= new (|java.lang.IllegalArgumentException|);
    #L00000Ad. call s2:= {|java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V|}(s1,"Negative time") @signature "java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.IllegalArgumentException|] @type special;
    #L00000Ae. throw s1;
    #L00001Aa. <@Frame (@Same, 0, `[(|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00001Ab. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00001Ac. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00002Aa. if [|v3|] == null then goto L00003Aa;
    #L00004Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00004Ab. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v3|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00003Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00003Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00003Ac. if s0 == 0 then goto L00005Aa;
    #L00006Aa. return 0;
    #L00005Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. s0:= +|java.io.File.fs|+;
    #L00005Ac. call s1:= {|java.io.FileSystem.setLastModifiedTime(Ljava.io.File;J)Z|}(s0,[|v0|],[|v1|]) @signature "java.io.FileSystem.setLastModifiedTime(Ljava.io.File;J)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00005Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.setReadOnly()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.setReadOnly()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.setReadOnly(Ljava.io.File;)Z|}(s0,[|v0|]) @signature "java.io.FileSystem.setReadOnly(Ljava.io.File;)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.setWritable(ZZ)Z|} ((|java.io.File|) [|v0|], (|boolean|) [|v1|], (|boolean|) [|v2|]) 
    @MaxLocals 4
    @MaxStack 5
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.setWritable(ZZ)Z" 
  {
    local jmp;
    s0;
    s1;
    [|v3|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v3|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v3|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.setPermission(Ljava.io.File;IZZ)Z|}(s0,[|v0|],2,[|v1|],[|v2|]) @signature "java.io.FileSystem.setPermission(Ljava.io.File;IZZ)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.setWritable(Z)Z|} ((|java.io.File|) [|v0|], (|boolean|) [|v1|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.setWritable(Z)Z" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.io.File.setWritable(ZZ)Z|}([|v0|],[|v1|],1) @signature "java.io.File.setWritable(ZZ)Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. return s0;
  }
  procedure (|boolean|) {|java.io.File.setReadable(ZZ)Z|} ((|java.io.File|) [|v0|], (|boolean|) [|v1|], (|boolean|) [|v2|]) 
    @MaxLocals 4
    @MaxStack 5
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.setReadable(ZZ)Z" 
  {
    local jmp;
    s0;
    s1;
    [|v3|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v3|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v3|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.setPermission(Ljava.io.File;IZZ)Z|}(s0,[|v0|],4,[|v1|],[|v2|]) @signature "java.io.FileSystem.setPermission(Ljava.io.File;IZZ)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.setReadable(Z)Z|} ((|java.io.File|) [|v0|], (|boolean|) [|v1|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.setReadable(Z)Z" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.io.File.setReadable(ZZ)Z|}([|v0|],[|v1|],1) @signature "java.io.File.setReadable(ZZ)Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. return s0;
  }
  procedure (|boolean|) {|java.io.File.setExecutable(ZZ)Z|} ((|java.io.File|) [|v0|], (|boolean|) [|v1|], (|boolean|) [|v2|]) 
    @MaxLocals 4
    @MaxStack 5
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.setExecutable(ZZ)Z" 
  {
    local jmp;
    s0;
    s1;
    [|v3|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v3|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V|}([|v3|],s0) @signature "java.lang.SecurityManager.checkWrite(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.setPermission(Ljava.io.File;IZZ)Z|}(s0,[|v0|],1,[|v1|],[|v2|]) @signature "java.io.FileSystem.setPermission(Ljava.io.File;IZZ)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|boolean|) {|java.io.File.setExecutable(Z)Z|} ((|java.io.File|) [|v0|], (|boolean|) [|v1|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.setExecutable(Z)Z" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.io.File.setExecutable(ZZ)Z|}([|v0|],[|v1|],1) @signature "java.io.File.setExecutable(ZZ)Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. return s0;
  }
  procedure (|boolean|) {|java.io.File.canExecute()Z|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.canExecute()Z" 
  {
    local jmp;
    s0;
    s1;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00003Ab. call s1:= {|java.lang.SecurityManager.checkExec(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkExec(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00004Aa;
    #L00005Aa. return 0;
    #L00004Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.checkAccess(Ljava.io.File;I)Z|}(s0,[|v0|],1) @signature "java.io.FileSystem.checkAccess(Ljava.io.File;I)Z" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. return s1;
  }
  procedure (|java.io.File[]|) {|java.io.File.listRoots()[Ljava.io.File;|} () 
    @MaxLocals 0
    @MaxStack 1
    @Owner (|java.io.File|)
    @Access (PUBLIC,STATIC)
    @Signature "java.io.File.listRoots()[Ljava/io/File;" 
  {
    local jmp;
    s0;
    s1;

    #L00000Aa. s0:= +|java.io.File.fs|+;
    #L00000Ab. call s1:= {|java.io.FileSystem.listRoots()[Ljava.io.File;|}(s0) @signature "java.io.FileSystem.listRoots()[Ljava.io.File;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00000Ac. return s1;
  }
  procedure (|long|) {|java.io.File.getTotalSpace()J|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 4
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getTotalSpace()J" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= new (|java.lang.RuntimePermission|);
    #L00003Ab. call s1:= {|java.lang.RuntimePermission.<init>(Ljava.lang.String;)V|}(s0,"getFileSystemAttributes") @signature "java.lang.RuntimePermission.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.RuntimePermission|] @type special;
    #L00003Ac. call s2:= {|java.lang.SecurityManager.checkPermission(Ljava.security.Permission;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkPermission(Ljava.security.Permission;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00004Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00004Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00005Aa;
    #L00006Aa. return 0;
    #L00005Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. s0:= +|java.io.File.fs|+;
    #L00005Ac. call s1:= {|java.io.FileSystem.getSpace(Ljava.io.File;I)J|}(s0,[|v0|],0) @signature "java.io.FileSystem.getSpace(Ljava.io.File;I)J" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00005Ad. return s1;
  }
  procedure (|long|) {|java.io.File.getFreeSpace()J|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 4
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getFreeSpace()J" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00003Aa. s0:= new (|java.lang.RuntimePermission|);
    #L00003Ab. call s1:= {|java.lang.RuntimePermission.<init>(Ljava.lang.String;)V|}(s0,"getFileSystemAttributes") @signature "java.lang.RuntimePermission.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.RuntimePermission|] @type special;
    #L00003Ac. call s2:= {|java.lang.SecurityManager.checkPermission(Ljava.security.Permission;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkPermission(Ljava.security.Permission;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00004Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00004Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00005Aa;
    #L00006Aa. return 0;
    #L00005Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00005Ab. s0:= +|java.io.File.fs|+;
    #L00005Ac. call s1:= {|java.io.FileSystem.getSpace(Ljava.io.File;I)J|}(s0,[|v0|],1) @signature "java.io.FileSystem.getSpace(Ljava.io.File;I)J" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00005Ad. return s1;
  }
  procedure (|long|) {|java.io.File.getUsableSpace()J|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 2
    @MaxStack 4
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.getUsableSpace()J" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v1|];

    #L00000Aa. call s0:= {|java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;|}() @signature "java.lang.System.getSecurityManager()Ljava.lang.SecurityManager;" @classDescriptor [|java.lang.System|] @type direct;
    #L00000Ab. [|v1|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. if [|v1|] == null then goto L00002Aa;
    #L00004Aa. s0:= new (|java.lang.RuntimePermission|);
    #L00004Ab. call s1:= {|java.lang.RuntimePermission.<init>(Ljava.lang.String;)V|}(s0,"getFileSystemAttributes") @signature "java.lang.RuntimePermission.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.RuntimePermission|] @type special;
    #L00004Ac. call s2:= {|java.lang.SecurityManager.checkPermission(Ljava.security.Permission;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkPermission(Ljava.security.Permission;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00005Aa. s0:= [|v0|].<|java.io.File.path|>;
    #L00005Ab. call s1:= {|java.lang.SecurityManager.checkRead(Ljava.lang.String;)V|}([|v1|],s0) @signature "java.lang.SecurityManager.checkRead(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityManager|] @type virtual;
    #L00002Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.io.File.isInvalid()Z|}([|v0|]) @signature "java.io.File.isInvalid()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ac. if s0 == 0 then goto L00006Aa;
    #L00007Aa. return 0;
    #L00006Aa. <@Frame (@Same, 0, `[(|java.lang.Object|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00006Ab. s0:= +|java.io.File.fs|+;
    #L00006Ac. call s1:= {|java.io.FileSystem.getSpace(Ljava.io.File;I)J|}(s0,[|v0|],2) @signature "java.io.FileSystem.getSpace(Ljava.io.File;I)J" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00006Ad. return s1;
  }
  procedure (|java.io.File|) {|java.io.File.createTempFile(Ljava.lang.String;Ljava.lang.String;Ljava.io.File;)Ljava.io.File;|} ((|java.lang.String|) [|v0|], (|java.lang.String|) [|v1|], (|java.io.File|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 6
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC,STATIC)
    @Signature "java.io.File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;" 
  {
    local jmp;
    s0;
    s1;
    [|v3|];
    [|v4|];
    [|v5|];

    #L00003Aa. call s0:= {|java.lang.String.length()I|}([|v0|]) @signature "java.lang.String.length()I" @classDescriptor [|java.lang.String|] @type virtual;
    #L00003Ab. if s0 >= 3 then goto L00004Aa;
    #L00005Aa. s0:= new (|java.lang.IllegalArgumentException|);
    #L00005Ab. call s1:= {|java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V|}(s0,"Prefix string too short") @signature "java.lang.IllegalArgumentException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.IllegalArgumentException|] @type special;
    #L00005Ac. throw s0;
    #L00004Aa. <@Frame (@Same, 0, `[(|top|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00004Ab. if [|v1|] != null then goto L00006Aa;
    #L00007Aa. [|v1|]:= ".tmp" @type string;
    #L00006Aa. <@Frame (@Same, 0, `[(|top|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00006Ab. if [|v2|] == null then goto L00008Aa;
    #L00006Ac. jmp:= [|v2|];
    #L00006Ad. goto L00009Aa;
    #L00008Aa. <@Frame (@Same, 0, `[(|top|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00008Ab. call s0:= {|java.io.File$TempDirectory.location()Ljava.io.File;|}() @signature "java.io.File$TempDirectory.location()Ljava.io.File;" @classDescriptor [|java.io.File$TempDirectory|] @type direct;
    #L00008Ac. jmp:= s0;
    #L00009Aa. <@Frame (@Same1, 0, `[(|top|), (|top|), (|top|), (|top|), (|top|), (|top|)], 1, `[(|java.lang.Object|), (|top|), (|top|)])>
    #L00009Ab. [|v3|]:= jmp @type java.lang.Object;
    #L00000Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|java.lang.Object|), (|top|), (|top|)])>
    #L00000Ab. call s0:= {|java.io.File$TempDirectory.generateFile(Ljava.lang.String;Ljava.lang.String;Ljava.io.File;)Ljava.io.File;|}([|v0|],[|v1|],[|v3|]) @signature "java.io.File$TempDirectory.generateFile(Ljava.lang.String;Ljava.lang.String;Ljava.io.File;)Ljava.io.File;" @classDescriptor [|java.io.File$TempDirectory|] @type direct;
    #L00000Ac. [|v4|]:= s0 @type (|java.lang.Object|);
    #L00010Aa. call s0:= {|java.io.File.exists()Z|}([|v4|]) @signature "java.io.File.exists()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00010Ab. if s0 != 0 then goto L00000Aa;
    #L00011Aa. call s0:= {|java.io.File.createNewFile()Z|}([|v4|]) @signature "java.io.File.createNewFile()Z" @classDescriptor [|java.io.File|] @type virtual;
    #L00011Ab. if s0 != 0 then goto L00001Aa;
    #L00012Aa. s0:= new (|java.io.IOException|);
    #L00012Ab. call s1:= {|java.io.IOException.<init>(Ljava.lang.String;)V|}(s0,"Unable to create temporary file") @signature "java.io.IOException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.io.IOException|] @type special;
    #L00012Ac. throw s0;
    #L00001Aa. <@Frame (@Append, 1, `[(|java.lang.Object|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|java.lang.Object|), (|top|), (|top|)])>
    #L00001Ab. goto L00013Aa;
    #L00002Aa. <@Frame (@Full, 4, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 1, `[(|java.lang.Object|), (|top|), (|top|)])>
    #L00002Ab. [|v5|]:= Exception @type java.lang.Object;
    #L00014Aa. if [|v2|] != null then goto L00015Aa;
    #L00016Aa. s0:= new (|java.lang.SecurityException|);
    #L00016Ab. call s1:= {|java.lang.SecurityException.<init>(Ljava.lang.String;)V|}(s0,"Unable to create temporary file") @signature "java.lang.SecurityException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.lang.SecurityException|] @type special;
    #L00016Ac. throw s0;
    #L00015Aa. <@Frame (@Append, 2, `[(|top|), (|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|java.lang.Object|), (|top|), (|top|)])>
    #L00015Ab. throw [|v5|];
    #L00013Aa. <@Frame (@Full, 5, `[(|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|), (|java.lang.Object|), (|top|)], 0, `[(|java.lang.Object|), (|top|), (|top|)])>
    #L00013Ab. return [|v4|];
      catch (|java.lang.SecurityException|) @[L00000Aa..L00001Aa] goto L00002Aa;
  }
  procedure (|java.io.File|) {|java.io.File.createTempFile(Ljava.lang.String;Ljava.lang.String;)Ljava.io.File;|} ((|java.lang.String|) [|v0|], (|java.lang.String|) [|v1|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC,STATIC)
    @Signature "java.io.File.createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.io.File.createTempFile(Ljava.lang.String;Ljava.lang.String;Ljava.io.File;)Ljava.io.File;|}([|v0|],[|v1|],null) @signature "java.io.File.createTempFile(Ljava.lang.String;Ljava.lang.String;Ljava.io.File;)Ljava.io.File;" @classDescriptor [|java.io.File|] @type direct;
    #L00000Ab. return s0;
  }
  procedure (|int|) {|java.io.File.compareTo(Ljava.io.File;)I|} ((|java.io.File|) [|v0|], (|java.io.File|) [|v1|]) 
    @MaxLocals 2
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.compareTo(Ljava/io/File;)I" 
  {
    local jmp;
    s0;
    s1;

    #L00000Aa. s0:= +|java.io.File.fs|+;
    #L00000Ab. call s1:= {|java.io.FileSystem.compare(Ljava.io.File;Ljava.io.File;)I|}(s0,[|v0|],[|v1|]) @signature "java.io.FileSystem.compare(Ljava.io.File;Ljava.io.File;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00000Ac. return s1;
  }
  procedure (|boolean|) {|java.io.File.equals(Ljava.lang.Object;)Z|} ((|java.io.File|) [|v0|], (|java.lang.Object|) [|v1|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.equals(Ljava/lang/Object;)Z" 
  {
    local jmp;
    s0;

    #L00000Aa. if [|v1|] == null then goto L00001Aa;
    #L00000Ab. s0:= instanceof @varname [|v1|] @type "(|java.io.File|)";
    #L00000Ac. if s0 == 0 then goto L00001Aa;
    #L00002Aa. call s0:= {|java.io.File.compareTo(Ljava.io.File;)I|}([|v0|],((|java.io.File|)) [|v1|]) @signature "java.io.File.compareTo(Ljava.io.File;)I" @classDescriptor [|java.io.File|] @type virtual;
    #L00002Ab. if s0 != 0 then goto L00003Aa;
    #L00002Ac. jmp:= 1;
    #L00002Ad. goto L00004Aa;
    #L00003Aa. <@Frame (@Same, 0, `[(|top|), (|top|)], 0, `[(|top|), (|top|)])>
    #L00003Ab. jmp:= 0;
    #L00004Aa. <@Frame (@Same1, 0, `[(|top|), (|top|)], 1, `[(|int|), (|top|)])>
    #L00004Ab. return jmp;
    #L00001Aa. <@Frame (@Same, 0, `[(|top|), (|top|)], 0, `[(|int|), (|top|)])>
    #L00001Ab. return 0;
  }
  procedure (|int|) {|java.io.File.hashCode()I|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.hashCode()I" 
  {
    local jmp;
    s0;
    s1;

    #L00000Aa. s0:= +|java.io.File.fs|+;
    #L00000Ab. call s1:= {|java.io.FileSystem.hashCode(Ljava.io.File;)I|}(s0,[|v0|]) @signature "java.io.FileSystem.hashCode(Ljava.io.File;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00000Ac. return s1;
  }
  procedure (|java.lang.String|) {|java.io.File.toString()Ljava.lang.String;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 1
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.toString()Ljava/lang/String;" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.io.File.getPath()Ljava.lang.String;|}([|v0|]) @signature "java.io.File.getPath()Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. return s0;
  }
  procedure (|void|) {|java.io.File.writeObject(Ljava.io.ObjectOutputStream;)V|} ((|java.io.File|) [|v0|], (|java.io.ObjectOutputStream|) [|v1|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PRIVATE)
    @Signature "java.io.File.writeObject(Ljava/io/ObjectOutputStream;)V" 
  {
    local jmp;
    s0;
    s1;

    #L00000Aa. call s0:= {|java.io.ObjectOutputStream.defaultWriteObject()V|}([|v1|]) @signature "java.io.ObjectOutputStream.defaultWriteObject()V" @classDescriptor [|java.io.ObjectOutputStream|] @type virtual;
    #L00001Aa. s0:= +|java.io.File.separatorChar|+;
    #L00001Ab. call s1:= {|java.io.ObjectOutputStream.writeChar(I)V|}([|v1|],s0) @signature "java.io.ObjectOutputStream.writeChar(I)V" @classDescriptor [|java.io.ObjectOutputStream|] @type virtual;
    #L00002Aa. return @void;
  }
  procedure (|void|) {|java.io.File.readObject(Ljava.io.ObjectInputStream;)V|} ((|java.io.File|) [|v0|], (|java.io.ObjectInputStream|) [|v1|]) 
    @Throws [|java.io.IOException|],[|java.lang.ClassNotFoundException|]
    @MaxLocals 5
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PRIVATE)
    @Signature "java.io.File.readObject(Ljava/io/ObjectInputStream;)V" 
  {
    local jmp;
    s0;
    s1;
    s2;
    [|v2|];
    [|v3|];
    [|v4|];

    #L00000Aa. call s0:= {|java.io.ObjectInputStream.readFields()Ljava.io.ObjectInputStream$GetField;|}([|v1|]) @signature "java.io.ObjectInputStream.readFields()Ljava.io.ObjectInputStream$GetField;" @classDescriptor [|java.io.ObjectInputStream|] @type virtual;
    #L00000Ab. [|v2|]:= s0 @type (|java.lang.Object|);
    #L00001Aa. call s0:= {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;Ljava.lang.Object;)Ljava.lang.Object;|}([|v2|],"path",null) @signature "java.io.ObjectInputStream$GetField.get(Ljava.lang.String;Ljava.lang.Object;)Ljava.lang.Object;" @classDescriptor [|java.io.ObjectInputStream$GetField|] @type virtual;
    #L00001Ab. [|v3|]:= ((|java.lang.String|)) s0 @type (|java.lang.String|);
    #L00002Aa. call s0:= {|java.io.ObjectInputStream.readChar()C|}([|v1|]) @signature "java.io.ObjectInputStream.readChar()C" @classDescriptor [|java.io.ObjectInputStream|] @type virtual;
    #L00002Ab. [|v4|]:= s0 @type (|java.lang.Object|);
    #L00003Aa. s0:= +|java.io.File.separatorChar|+;
    #L00003Ab. if [|v4|] == s0 then goto L00004Aa;
    #L00005Aa. s0:= +|java.io.File.separatorChar|+;
    #L00005Ab. call s1:= {|java.lang.String.replace(CC)Ljava.lang.String;|}([|v3|],[|v4|],s0) @signature "java.lang.String.replace(CC)Ljava.lang.String;" @classDescriptor [|java.lang.String|] @type virtual;
    #L00005Ac. [|v3|]:= s1 @type (|java.lang.Object|);
    #L00004Aa. <@Frame (@Append, 3, `[(|java.lang.Object|), (|java.lang.Object|), (|int|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00004Ab. s0:= +|java.io.File.fs|+;
    #L00004Ac. call s1:= {|java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;|}(s0,[|v3|]) @signature "java.io.FileSystem.normalize(Ljava.lang.String;)Ljava.lang.String;" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ad. [|v0|].<|java.io.File.path|>:= s1;
    #L00006Aa. s0:= +|java.io.File.fs|+;
    #L00006Ab. s1:= [|v0|].<|java.io.File.path|>;
    #L00006Ac. call s2:= {|java.io.FileSystem.prefixLength(Ljava.lang.String;)I|}(s0,s1) @signature "java.io.FileSystem.prefixLength(Ljava.lang.String;)I" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00006Ad. [|v0|].<|java.io.File.prefixLength|>:= s2;
    #L00007Aa. return @void;
  }
  procedure (|java.nio.file.Path|) {|java.io.File.toPath()Ljava.nio.file.Path;|} ((|java.io.File|) [|v0|]) 
    @MaxLocals 4
    @MaxStack 3
    @Owner (|java.io.File|)
    @Access (PUBLIC)
    @Signature "java.io.File.toPath()Ljava/nio/file/Path;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    [|v1|];
    [|v2|];
    [|v3|];

    #L00004Aa. s0:= [|v0|].<|java.io.File.filePath|>;
    #L00004Ab. [|v1|]:= s0 @type (|java.nio.file.Path|);
    #L00005Aa. if [|v1|] != null then goto L00006Aa;
    #L00007Aa. [|v2|]:= [|v0|] @type java.lang.Object;
    #L00007Ab. (@monitorenter [|v0|])
    #L00000Aa. s0:= [|v0|].<|java.io.File.filePath|>;
    #L00000Ab. [|v1|]:= s0 @type (|java.nio.file.Path|);
    #L00008Aa. if [|v1|] != null then goto L00009Aa;
    #L00010Aa. call s0:= {|java.nio.file.FileSystems.getDefault()Ljava.nio.file.FileSystem;|}() @signature "java.nio.file.FileSystems.getDefault()Ljava.nio.file.FileSystem;" @classDescriptor [|java.nio.file.FileSystems|] @type direct;
    #L00010Ab. s1:= [|v0|].<|java.io.File.path|>;
    #L00010Ac. s2:= new (|java.lang.String|)[0];
    #L00010Ad. call s3:= {|java.nio.file.FileSystem.getPath(Ljava.lang.String;[Ljava.lang.String;)Ljava.nio.file.Path;|}(s0,s1,s2) @signature "java.nio.file.FileSystem.getPath(Ljava.lang.String;[Ljava.lang.String;)Ljava.nio.file.Path;" @classDescriptor [|java.nio.file.FileSystem|] @type virtual;
    #L00010Ae. [|v1|]:= s3 @type (|java.lang.Object|);
    #L00011Aa. [|v0|].<|java.io.File.filePath|>:= [|v1|];
    #L00009Aa. <@Frame (@Append, 2, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|)])>
    #L00009Ab. (@monitorexit [|v2|])
    #L00001Aa. goto L00006Aa;
    #L00002Aa. <@Frame (@Same1, 0, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 1, `[(|java.lang.Object|), (|top|), (|top|)])>
    #L00002Ab. [|v3|]:= Exception @type java.lang.Object;
    #L00002Ac. (@monitorexit [|v2|])
    #L00003Aa. throw [|v3|];
    #L00006Aa. <@Frame (@Chop, 1, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|)], 0, `[(|java.lang.Object|), (|top|), (|top|)])>
    #L00006Ab. return [|v1|];
      catch (|unk|) @[L00000Aa..L00001Aa] goto L00002Aa;
      catch (|unk|) @[L00002Aa..L00003Aa] goto L00002Aa;
  }
  procedure (|int|) {|java.io.File.compareTo(Ljava.lang.Object;)I|} ((|java.io.File|) [|v0|], (|java.lang.Object|) [|v1|]) 
    @MaxLocals 2
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (PUBLIC,SYNTHETIC,VOLATILE)
    @Signature "java.io.File.compareTo(Ljava/lang/Object;)I" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.io.File.compareTo(Ljava.io.File;)I|}([|v0|],((|java.io.File|)) [|v1|]) @signature "java.io.File.compareTo(Ljava.io.File;)I" @classDescriptor [|java.io.File|] @type virtual;
    #L00000Ab. return s0;
  }
  procedure (|void|) {|java.io.File.<clinit>()V|} () 
    @MaxLocals 0
    @MaxStack 2
    @Owner (|java.io.File|)
    @Access (STATIC)
    @Signature "java.io.File.<clinit>()V" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;
    s5;

    #L00000Aa. call s0:= {|java.lang.Class.desiredAssertionStatus()Z|}("Ljava/io/File;") @signature "java.lang.Class.desiredAssertionStatus()Z" @classDescriptor [|java.lang.Class|] @type virtual;
    #L00000Ab. if s0 != 0 then goto L00001Aa;
    #L00000Ac. jmp:= 1;
    #L00000Ad. goto L00002Aa;
    #L00001Aa. <@Frame (@Same, 0, `[], 0, `[(|top|), (|top|)])>
    #L00001Ab. jmp:= 0;
    #L00002Aa. <@Frame (@Same1, 0, `[], 1, `[(|int|), (|top|)])>
    #L00002Ab. +|java.io.File.$assertionsDisabled|+:= jmp;
    #L00003Aa. call s0:= {|java.io.FileSystem.getFileSystem()Ljava.io.FileSystem;|}() @signature "java.io.FileSystem.getFileSystem()Ljava.io.FileSystem;" @classDescriptor [|java.io.FileSystem|] @type direct;
    #L00003Ab. +|java.io.File.fs|+:= s0;
    #L00004Aa. s0:= +|java.io.File.fs|+;
    #L00004Ab. call s1:= {|java.io.FileSystem.getSeparator()C|}(s0) @signature "java.io.FileSystem.getSeparator()C" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00004Ac. +|java.io.File.separatorChar|+:= s1;
    #L00005Aa. s0:= new (|java.lang.StringBuilder|);
    #L00005Ab. call s1:= {|java.lang.StringBuilder.<init>()V|}(s0) @signature "java.lang.StringBuilder.<init>()V" @classDescriptor [|java.lang.StringBuilder|] @type special;
    #L00005Ac. call s2:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s0,"") @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00005Ad. s3:= +|java.io.File.separatorChar|+;
    #L00005Ae. call s4:= {|java.lang.StringBuilder.append(C)Ljava.lang.StringBuilder;|}(s2,s3) @signature "java.lang.StringBuilder.append(C)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00005Af. call s5:= {|java.lang.StringBuilder.toString()Ljava.lang.String;|}(s4) @signature "java.lang.StringBuilder.toString()Ljava.lang.String;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00005Ag. +|java.io.File.separator|+:= s5;
    #L00006Aa. s0:= +|java.io.File.fs|+;
    #L00006Ab. call s1:= {|java.io.FileSystem.getPathSeparator()C|}(s0) @signature "java.io.FileSystem.getPathSeparator()C" @classDescriptor [|java.io.FileSystem|] @type virtual;
    #L00006Ac. +|java.io.File.pathSeparatorChar|+:= s1;
    #L00007Aa. s0:= new (|java.lang.StringBuilder|);
    #L00007Ab. call s1:= {|java.lang.StringBuilder.<init>()V|}(s0) @signature "java.lang.StringBuilder.<init>()V" @classDescriptor [|java.lang.StringBuilder|] @type special;
    #L00007Ac. call s2:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s0,"") @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00007Ad. s3:= +|java.io.File.pathSeparatorChar|+;
    #L00007Ae. call s4:= {|java.lang.StringBuilder.append(C)Ljava.lang.StringBuilder;|}(s2,s3) @signature "java.lang.StringBuilder.append(C)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00007Af. call s5:= {|java.lang.StringBuilder.toString()Ljava.lang.String;|}(s4) @signature "java.lang.StringBuilder.toString()Ljava.lang.String;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00007Ag. +|java.io.File.pathSeparator|+:= s5;
    #L00007Ah. return @void;
  }

record (|java.io.File$TempDirectory|)
    @Source "File.java"
    @Type class
    @AccessFlag ()
    @InnerClass (
      @Name (|java.io.File$TempDirectory|), 
      @OuterName (|java.io.File|), 
      @InnerName TempDirectory, 
      @AccessFlag (PRIVATE,STATIC)
     ) 
  extends 
    (|java.lang.Object|) 
{
  (|java.io.File|) <|File$TempDirectory.tmpdir|> @AccessFlag (PRIVATE,STATIC,FINAL);
  (|java.security.SecureRandom|) <|File$TempDirectory.random|> @AccessFlag (PRIVATE,STATIC,FINAL);
}

  procedure (|void|) {|java.io.File$TempDirectory.<init>()V|} ((|java.io.File$TempDirectory|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 1
    @Owner (|java.io.File$TempDirectory|)
    @Access (PRIVATE,CONSTRUCTOR)
    @Signature "java.io.File$TempDirectory.<init>()V" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.lang.Object.<init>()V|}([|v0|]) @signature "java.lang.Object.<init>()V" @classDescriptor [|java.lang.Object|] @type special;
    #L00000Ab. return @void;
  }
  procedure (|java.io.File|) {|java.io.File$TempDirectory.location()Ljava.io.File;|} () 
    @MaxLocals 0
    @MaxStack 1
    @Owner (|java.io.File$TempDirectory|)
    @Access (STATIC)
    @Signature "java.io.File$TempDirectory.location()Ljava/io/File;" 
  {
    local jmp;
    s0;

    #L00000Aa. s0:= +|java.io.File$TempDirectory.tmpdir|+;
    #L00000Ab. return s0;
  }
  procedure (|java.io.File|) {|java.io.File$TempDirectory.generateFile(Ljava.lang.String;Ljava.lang.String;Ljava.io.File;)Ljava.io.File;|} ((|java.lang.String|) [|v0|], (|java.lang.String|) [|v1|], (|java.io.File|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @MaxLocals 7
    @MaxStack 4
    @Owner (|java.io.File$TempDirectory|)
    @Access (STATIC)
    @Signature "java.io.File$TempDirectory.generateFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;
    s5;
    s6;
    [|v3|];
    [|v4|];
    [|v5|];
    [|v6|];

    #L00000Aa. s0:= +|java.io.File$TempDirectory.random|+;
    #L00000Ab. call s1:= {|java.security.SecureRandom.nextLong()J|}(s0) @signature "java.security.SecureRandom.nextLong()J" @classDescriptor [|java.security.SecureRandom|] @type virtual;
    #L00000Ac. [|v3|]:= s1 @type (|java.lang.Object|);
    #L00001Aa. s0:= lcmp(-9223372036854775808L,[|v3|]);
    #L00001Ab. if s0 != 0 then goto L00002Aa;
    #L00003Aa. [|v3|]:= 0 @type (|long|);
    #L00003Ab. goto L00004Aa;
    #L00002Aa. <@Frame (@Append, 1, `[(|long|), (|top|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00002Ab. call s0:= {|java.lang.Math.abs(J)J|}([|v3|]) @signature "java.lang.Math.abs(J)J" @classDescriptor [|java.lang.Math|] @type direct;
    #L00002Ac. [|v3|]:= s0 @type (|java.lang.Object|);
    #L00004Aa. <@Frame (@Same, 0, `[(|long|), (|top|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00004Ab. s0:= new (|java.lang.StringBuilder|);
    #L00004Ac. call s1:= {|java.lang.StringBuilder.<init>()V|}(s0) @signature "java.lang.StringBuilder.<init>()V" @classDescriptor [|java.lang.StringBuilder|] @type special;
    #L00004Ad. call s2:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s0,[|v0|]) @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00004Ae. call s3:= {|java.lang.Long.toString(J)Ljava.lang.String;|}([|v3|]) @signature "java.lang.Long.toString(J)Ljava.lang.String;" @classDescriptor [|java.lang.Long|] @type direct;
    #L00004Af. call s4:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s2,s3) @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00004Ag. call s5:= {|java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;|}(s4,[|v1|]) @signature "java.lang.StringBuilder.append(Ljava.lang.String;)Ljava.lang.StringBuilder;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00004Ah. call s6:= {|java.lang.StringBuilder.toString()Ljava.lang.String;|}(s5) @signature "java.lang.StringBuilder.toString()Ljava.lang.String;" @classDescriptor [|java.lang.StringBuilder|] @type virtual;
    #L00004Ai. [|v5|]:= s6 @type (|java.lang.Object|);
    #L00005Aa. s0:= new (|java.io.File|);
    #L00005Ab. call s1:= {|java.io.File.<init>(Ljava.io.File;Ljava.lang.String;)V|}(s0,[|v2|],[|v5|]) @signature "java.io.File.<init>(Ljava.io.File;Ljava.lang.String;)V" @classDescriptor [|java.io.File|] @type special;
    #L00005Ac. [|v6|]:= s0 @type (|java.lang.Object|);
    #L00006Aa. call s0:= {|java.io.File.getName()Ljava.lang.String;|}([|v6|]) @signature "java.io.File.getName()Ljava.lang.String;" @classDescriptor [|java.io.File|] @type virtual;
    #L00006Ab. call s1:= {|java.lang.String.equals(Ljava.lang.Object;)Z|}([|v5|],s0) @signature "java.lang.String.equals(Ljava.lang.Object;)Z" @classDescriptor [|java.lang.String|] @type virtual;
    #L00006Ac. if s1 != 0 then goto L00007Aa;
    #L00008Aa. s0:= new (|java.io.IOException|);
    #L00008Ab. call s1:= {|java.io.IOException.<init>(Ljava.lang.String;)V|}(s0,"Unable to create temporary file") @signature "java.io.IOException.<init>(Ljava.lang.String;)V" @classDescriptor [|java.io.IOException|] @type special;
    #L00008Ac. throw s0;
    #L00007Aa. <@Frame (@Append, 2, `[(|java.lang.Object|), (|java.lang.Object|), (|top|), (|top|), (|top|), (|top|), (|top|)], 0, `[(|top|), (|top|), (|top|), (|top|)])>
    #L00007Ab. return [|v6|];
  }
  procedure (|void|) {|java.io.File$TempDirectory.<clinit>()V|} () 
    @MaxLocals 0
    @MaxStack 5
    @Owner (|java.io.File$TempDirectory|)
    @Access (STATIC)
    @Signature "java.io.File$TempDirectory.<clinit>()V" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;

    #L00000Aa. s0:= new (|java.io.File|);
    #L00000Ab. s1:= new (|sun.security.action.GetPropertyAction|);
    #L00000Ac. call s2:= {|sun.security.action.GetPropertyAction.<init>(Ljava.lang.String;)V|}(s1,"java.io.tmpdir") @signature "sun.security.action.GetPropertyAction.<init>(Ljava.lang.String;)V" @classDescriptor [|sun.security.action.GetPropertyAction|] @type special;
    #L00000Ad. call s3:= {|java.security.AccessController.doPrivileged(Ljava.security.PrivilegedAction;)Ljava.lang.Object;|}(s1) @signature "java.security.AccessController.doPrivileged(Ljava.security.PrivilegedAction;)Ljava.lang.Object;" @classDescriptor [|java.security.AccessController|] @type direct;
    #L00000Ae. call s4:= {|java.io.File.<init>(Ljava.lang.String;)V|}(s0,((|java.lang.String|)) s3) @signature "java.io.File.<init>(Ljava.lang.String;)V" @classDescriptor [|java.io.File|] @type special;
    #L00000Af. +|java.io.File$TempDirectory.tmpdir|+:= s0;
    #L00001Aa. s0:= new (|java.security.SecureRandom|);
    #L00001Ab. call s1:= {|java.security.SecureRandom.<init>()V|}(s0) @signature "java.security.SecureRandom.<init>()V" @classDescriptor [|java.security.SecureRandom|] @type special;
    #L00001Ac. +|java.io.File$TempDirectory.random|+:= s0;
    #L00001Ad. return @void;
  }

record (|java.io.File$PathStatus|)
    @Source "File.java"
    @GenericSignature "Ljava/lang/Enum<Ljava/io/File$PathStatus;>;"
    @Type class
    @AccessFlag (FINAL,ENUM)
    @InnerClass (
      @Name (|java.io.File$PathStatus|), 
      @OuterName (|java.io.File|), 
      @InnerName PathStatus, 
      @AccessFlag (PRIVATE,STATIC,FINAL,ENUM)
     ) 
  extends 
    (|java.lang.Enum|) 
{
  (|java.io.File$PathStatus[]|) <|File$PathStatus.$VALUES|> @AccessFlag (PRIVATE,STATIC,FINAL,SYNTHETIC);
}
  global (|java.io.File$PathStatus|) @@+|File$PathStatus.INVALID|+ @AccessFlag (PUBLIC,STATIC,FINAL,ENUM);
  global (|java.io.File$PathStatus|) @@+|File$PathStatus.CHECKED|+ @AccessFlag (PUBLIC,STATIC,FINAL,ENUM);

  procedure (|java.io.File$PathStatus[]|) {|java.io.File$PathStatus.values()[Ljava.io.File$PathStatus;|} () 
    @MaxLocals 0
    @MaxStack 1
    @Owner (|java.io.File$PathStatus|)
    @Access (PUBLIC,STATIC)
    @Signature "java.io.File$PathStatus.values()[Ljava/io/File$PathStatus;" 
  {
    local jmp;
    s0;
    s1;

    #L00000Aa. s0:= +|java.io.File$PathStatus.$VALUES|+;
    #L00000Ab. call s1:= {|[Ljava.io.File$PathStatus;.clone()Ljava.lang.Object;|}(s0) @signature "[Ljava.io.File$PathStatus;.clone()Ljava.lang.Object;" @classDescriptor [|[Ljava.io.File$PathStatus;|] @type virtual;
    #L00000Ac. return ((|[Ljava.io.File$PathStatus;|)) s1;
  }
  procedure (|java.io.File$PathStatus|) {|java.io.File$PathStatus.valueOf(Ljava.lang.String;)Ljava.io.File$PathStatus;|} ((|java.lang.String|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 2
    @Owner (|java.io.File$PathStatus|)
    @Access (PUBLIC,STATIC)
    @Signature "java.io.File$PathStatus.valueOf(Ljava/lang/String;)Ljava/io/File$PathStatus;" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.lang.Enum.valueOf(Ljava.lang.Class;Ljava.lang.String;)Ljava.lang.Enum;|}("Ljava/io/File$PathStatus;",[|v0|]) @signature "java.lang.Enum.valueOf(Ljava.lang.Class;Ljava.lang.String;)Ljava.lang.Enum;" @classDescriptor [|java.lang.Enum|] @type direct;
    #L00000Ab. return ((|java.io.File$PathStatus|)) s0;
  }
  procedure (|void|) {|java.io.File$PathStatus.<init>(Ljava.lang.String;I)V|} ((|java.io.File$PathStatus|) [|v0|], (|java.lang.String|) [|v1|], (|int|) [|v2|]) 
    @MaxLocals 3
    @MaxStack 3
    @GenericSignature "()V"
    @Owner (|java.io.File$PathStatus|)
    @Access (PRIVATE,CONSTRUCTOR)
    @Signature "java.io.File$PathStatus.<init>(Ljava/lang/String;I)V" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.lang.Enum.<init>(Ljava.lang.String;I)V|}([|v0|],[|v1|],[|v2|]) @signature "java.lang.Enum.<init>(Ljava.lang.String;I)V" @classDescriptor [|java.lang.Enum|] @type special;
    #L00000Ab. return @void;
  }
  procedure (|void|) {|java.io.File$PathStatus.<clinit>()V|} () 
    @MaxLocals 0
    @MaxStack 4
    @Owner (|java.io.File$PathStatus|)
    @Access (STATIC)
    @Signature "java.io.File$PathStatus.<clinit>()V" 
  {
    local jmp;
    s0;
    s1;
    s2;
    s3;
    s4;
    s5;
    s6;

    #L00000Aa. s0:= new (|java.io.File$PathStatus|);
    #L00000Ab. call s1:= {|java.io.File$PathStatus.<init>(Ljava.lang.String;I)V|}(s0,"INVALID",0) @signature "java.io.File$PathStatus.<init>(Ljava.lang.String;I)V" @classDescriptor [|java.io.File$PathStatus|] @type special;
    #L00000Ac. +|java.io.File$PathStatus.INVALID|+:= s0;
    #L00000Ad. s2:= new (|java.io.File$PathStatus|);
    #L00000Ae. call s3:= {|java.io.File$PathStatus.<init>(Ljava.lang.String;I)V|}(s2,"CHECKED",1) @signature "java.io.File$PathStatus.<init>(Ljava.lang.String;I)V" @classDescriptor [|java.io.File$PathStatus|] @type special;
    #L00000Af. +|java.io.File$PathStatus.CHECKED|+:= s2;
    #L00000Ag. s4:= new (|java.io.File$PathStatus|)[2];
    #L00000Ah. s5:= +|java.io.File$PathStatus.INVALID|+;
    #L00000Ai. s4[0]:= s5;
    #L00000Aj. s6:= +|java.io.File$PathStatus.CHECKED|+;
    #L00000Ak. s4[1]:= s6;
    #L00000Al. +|java.io.File$PathStatus.$VALUES|+:= s4;
    #L00000Am. return @void;
  }

record (|java.io.ObjectInputStream$GetField|)
    @Source "ObjectInputStream.java"
    @Type class
    @AccessFlag (PUBLIC)
    @InnerClass (
      @Name (|java.io.ObjectInputStream$GetField|), 
      @OuterName (|java.io.ObjectInputStream|), 
      @InnerName GetField, 
      @AccessFlag (PUBLIC,STATIC)
     ) 
  extends 
    (|java.lang.Object|) 
{
}

  procedure (|void|) {|java.io.ObjectInputStream$GetField.<init>()V|} ((|java.io.ObjectInputStream$GetField|) [|v0|]) 
    @MaxLocals 1
    @MaxStack 1
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC,CONSTRUCTOR)
    @Signature "java.io.ObjectInputStream$GetField.<init>()V" 
  {
    local jmp;
    s0;

    #L00000Aa. call s0:= {|java.lang.Object.<init>()V|}([|v0|]) @signature "java.lang.Object.<init>()V" @classDescriptor [|java.lang.Object|] @type special;
    #L00000Ab. return @void;
  }
  procedure (|java.io.ObjectStreamClass|) {|java.io.ObjectInputStream$GetField.getObjectStreamClass()Ljava.io.ObjectStreamClass;|} ((|java.io.ObjectInputStream$GetField|) [|v0|]) 
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.getObjectStreamClass()Ljava/io/ObjectStreamClass;" 
  {

    #L00000Aa. return @void;
  }
  procedure (|boolean|) {|java.io.ObjectInputStream$GetField.defaulted(Ljava.lang.String;)Z|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.defaulted(Ljava/lang/String;)Z" 
  {

    #L00000Aa. return @void;
  }
  procedure (|boolean|) {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;Z)Z|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|], (|boolean|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.get(Ljava/lang/String;Z)Z" 
  {

    #L00000Aa. return @void;
  }
  procedure (|byte|) {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;B)B|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|], (|byte|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.get(Ljava/lang/String;B)B" 
  {

    #L00000Aa. return @void;
  }
  procedure (|char|) {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;C)C|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|], (|char|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.get(Ljava/lang/String;C)C" 
  {

    #L00000Aa. return @void;
  }
  procedure (|short|) {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;S)S|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|], (|short|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.get(Ljava/lang/String;S)S" 
  {

    #L00000Aa. return @void;
  }
  procedure (|int|) {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;I)I|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|], (|int|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.get(Ljava/lang/String;I)I" 
  {

    #L00000Aa. return @void;
  }
  procedure (|long|) {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;J)J|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|], (|long|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.get(Ljava/lang/String;J)J" 
  {

    #L00000Aa. return @void;
  }
  procedure (|float|) {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;F)F|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|], (|float|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.get(Ljava/lang/String;F)F" 
  {

    #L00000Aa. return @void;
  }
  procedure (|double|) {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;D)D|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|], (|double|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.get(Ljava/lang/String;D)D" 
  {

    #L00000Aa. return @void;
  }
  procedure (|java.lang.Object|) {|java.io.ObjectInputStream$GetField.get(Ljava.lang.String;Ljava.lang.Object;)Ljava.lang.Object;|} ((|java.io.ObjectInputStream$GetField|) [|v0|], (|java.lang.String|) [|v1|], (|java.lang.Object|) [|v2|]) 
    @Throws [|java.io.IOException|]
    @Owner (|java.io.ObjectInputStream$GetField|)
    @Access (PUBLIC)
    @Signature "java.io.ObjectInputStream$GetField.get(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" 
  {

    #L00000Aa. return @void;
  }

